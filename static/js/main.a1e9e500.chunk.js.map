{"version":3,"sources":["component/AppBar/AppBar.js","component/ControlPanel/Filters.js","component/ControlPanel/Search.js","component/ControlPanel/BarCharts.js","component/ControlPanel/VirtualList.js","component/ControlPanel/AllPapers.js","component/ControlPanel/ControlPanel.js","store/Categories.js","component/Gallery/VisCatFilters.js","component/Gallery/Image.js","component/Gallery/Search.js","component/Gallery/Gallery.js","component/Distribution/BarCharts.js","component/Distribution/Stream.js","component/Distribution/Distribution.js","component/WordCloud/WordCloud.js","component/DetailView/VisType.js","component/DetailView/DetailView.js","component/Home/LeftBar.js","component/Home/RightPanel.js","component/App.js","store/SystemStatus.js","store/Data.js","store/APIv1.js","store/index.js","index.js","component/AppBar/logo.svg","component/Home/data-structure.png","component/Home/pipeline.png"],"names":["useStyles","makeStyles","theme","root","position","width","height","left","top","borderBottomRightRadius","spacing","backgroundColor","palette","primary","dark","titleGroup","display","alignItems","logo","margin","title","fontSize","color","secondary","contrastText","tabGroup","inject","observer","d","classes","routers","className","alt","src","Typography","Tabs","value","indexOf","router","indicatorColor","textColor","onChange","event","newValue","centered","Tab","label","index","flex","autocomplete","marginTop","icon","CheckBoxOutlineBlank","checkedIcon","CheckBox","renderRow","props","data","style","React","cloneElement","OuterElementContext","createContext","OuterElementType","forwardRef","ref","outerProps","useContext","ListboxComponent","children","other","itemData","Children","toArray","itemCount","length","getChildSize","child","gridRef","useRef","useEffect","current","resetAfterIndex","useResetCache","Provider","map","reduce","a","b","outerElementType","innerElementType","itemSize","overscanCount","useState","setVal","allFilters","Autocomplete","disabled","barSelected","multiple","size","options","e","updateFilter","disableCloseOnSelect","renderOption","option","selected","Fragment","Checkbox","marginRight","checked","renderInput","params","TextField","variant","target","search","borderRadius","shape","fade","common","white","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","keyword","InputBase","placeholder","input","onKeyPress","key","bars","animation","brush","xAxisIndex","brushLink","outOfBrush","colorAlpha","toolbox","feature","type","lineX","clear","legend","xAxis","bar","year","axisLabel","yAxis","tooltip","grid","bottom","textStyle","series","name","stack","InfoVis","VAST","onEvents","brushEnd","yearRange","areas","coordRange","val","brushselected","batch","overflow","cache","CellMeasurerCache","defaultHeight","fixedWidth","useTheme","rowCount","rowHeight","deferredMeasurementCache","rowRenderer","parent","list","rowIndex","columnIndex","measure","registerChild","CellRenderer","paddingRight","transform","outline","cnt","paperItem","PaperItem","paper","onLoad","papers","filteredPapers","p","background","flexDirection","ColorStyles","GroupedCategories","GroupedCategoriesColor","TextTranslate","ReverseTextTranslate","Object","keys","forEach","selectAll","minWidth","maxWidth","chip","allCategories","filteredFilters","optionalValue","includes","push","limitTags","t","filterCategories","initClickWord","updateFilterCategories","InputProps","startAdornment","undefined","filter","_","i","img","right","gridList","titleBar","actions","zIndex","marginBottom","stat","pagination","sys","page","setPage","showedImages","Pagination","count","Math","ceil","newPage","GridList","cellHeight","cols","slice","getPaperInfo","pid","GridListTile","iid","rows","cursor","onClick","showDetail","url","GridListTileBar","titlePosition","actionPosition","groupedCat","barSeries","min","max","categories","sort","ai","bi","console","log","years","Array","from","mappedGroupedCategories","cat","showOnlySelected","notMerge","trigger","axisPointer","formatter","x","y","containLabel","stream","calCat","Set","add","animationDuration","lineStyle","singleAxis","show","emphasis","itemStyle","shadowBlur","shadowColor","switches","switchbox","view","setVisType","FormGroup","Switch","item","colors","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","fontWeight","rotations","rotationAngles","scale","spiral","transitionDuration","words","showedWords","callbacks","getWordColor","word","clickOnWord","clickedWord","text","onWordClick","nested","visType","boxes","setVisible","open","setOpen","previousValue","currentValue","visibility","indeterminate","ListItem","ListItemIcon","edge","tabIndex","box","disableRipple","ListItemText","IconButton","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","bid","idx","titlebar","row","imgView","recs","rec","details","caption","detailedImg","getImageInfo","dimensions","imgSize","state","setState","handleChange","indexes","hasOwnProperty","Dialog","detailView","onClose","closeDetail","DialogContent","CircularProgress","Button","href","window","innerWidth","maxHeight","innerHeight","naturalHeight","naturalWidth","authors","abstract","LeftBar","figure","figureHalf","lists","table","th","borderRight","td","th2","borderTop","th3","borderBottom","tableData","dataStructure","pipeline","clsx","main","CssBaseline","SystemStatus","observable","shallow","scrollbar","this","createMuiTheme","themeOption","overrides","MuiCssBaseline","lighten","darken","computed","action","updateBBoxes","apiV1","getBBox","Data","initPapers","updatePapers","filterPapersByCondition","extractFilters","paperYear","certainPapers","allConferences","allAuthors","allYears","conference","paperConf","aut","initImages","pids","images","getImages","updateImageCounts","updateWords","image","wordFrequencies","captionStat","filterConferences","filterYears","filterAuthors","flag","author","minYear","maxYear","yearCount","filterCaption","isFiltered","nums_of_visualizations","split","yearSeries","focus","res","tokenizeAndStem","JSON","parse","stringify","filters","natural","require","tokenizer","WordTokenizer","uri","APIv1","imageInfo","paperInfo","shuffled","random","visualizations","visualization_bbox","fetch","req","cb","then","json","Function","catch","error","tokenize","paperObj","keywords","PorterStemmer","stem","wordsStemmed","getPaperConference","toLowerCase","store","init","ReactDOM","render","visImages","document","querySelector","module","exports"],"mappings":"+NAQMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,WACVC,MAAO,OACPC,OAAQ,MACRC,KAAM,EACNC,IAAK,EACLC,wBAAyBP,EAAMQ,QAAQ,IACvCC,gBAAiBT,EAAMU,QAAQC,QAAQC,MAG3CC,WAAY,CACRV,MAAO,OACPC,OAAQ,MACRU,QAAS,OACTC,WAAY,UAEhBC,KAAM,CACFC,OAAQjB,EAAMQ,QAAQ,EAAG,GACzBJ,OAAQ,OAEZc,MAAO,CACHC,SAAU,MACVC,MAAOpB,EAAMU,QAAQW,UAAUC,cAEnCC,SAAU,CACNpB,MAAO,OACPC,OAAQ,WAiCDoB,kBAAO,IAAPA,CAAYC,aA7B3B,YAAsB,IAALC,EAAI,EAAJA,EACPC,EAAU7B,IAEV8B,EAAU,CAAC,OAAO,YAMxB,OAAO,yBAAKC,UAAWF,EAAQ1B,MAC3B,yBAAK4B,UAAWF,EAAQd,YACxB,yBAAKgB,UAAWF,EAAQX,KACnBc,IAAK,OAAQC,IAAKf,MACvB,kBAACgB,EAAA,EAAD,CAAYH,UAAWF,EAAQT,OAA/B,cAEA,kBAACe,EAAA,EAAD,CACIJ,UAAWF,EAAQJ,SACnBW,MAAON,EAAQO,QAAQT,EAAEU,QACzBC,eAAe,UACfC,UAAU,UACVC,SAfa,SAACC,EAAOC,GACzBf,EAAEU,OAASR,EAAQa,IAefC,UAAQ,GAER,kBAACC,EAAA,EAAD,CAAKC,MAAM,OAAOC,MAAO,IACzB,kBAACF,EAAA,EAAD,CAAKC,MAAM,WAAWC,MAAO,U,oFCvDnC/C,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,OAAQjB,EAAMQ,QAAQ,EAAG,EAAG,GAC5BsC,KAAM,mBAEVC,aAAc,CACVC,UAAWhD,EAAMQ,QAAQ,QAI3ByC,EAAO,kBAACC,EAAA,EAAD,CAAsB/B,SAAS,UACtCgC,EAAc,kBAACC,EAAA,EAAD,CAAUjC,SAAS,UAIvC,SAASkC,EAAUC,GAAQ,IACjBC,EAAuBD,EAAvBC,KAAMV,EAAiBS,EAAjBT,MAAOW,EAAUF,EAAVE,MACrB,OAAOC,IAAMC,aAAaH,EAAKV,GAAQ,CACrCW,MAAM,2BACDA,GADA,IAEHlD,IAAKkD,EAAMlD,IAPO,MAYxB,IAAMqD,EAAsBF,IAAMG,cAAc,IAE1CC,EAAmBJ,IAAMK,YAAW,SAACR,EAAOS,GAChD,IAAMC,EAAaP,IAAMQ,WAAWN,GACpC,OAAO,uCAAKI,IAAKA,GAAST,EAAWU,OAcvC,IAAME,EAAmBT,IAAMK,YAAW,SAA0BR,EAAOS,GAAM,IACvEI,EAAuBb,EAAvBa,SAAaC,EADyD,YAC/Cd,EAD+C,cAExEe,EAAWZ,IAAMa,SAASC,QAAQJ,GAClCK,EAAYH,EAASI,OAGrBC,EAAe,SAACC,GACpB,OAHe,IAaXC,EA5BR,SAAuBrB,GACrB,IAAMQ,EAAMN,IAAMoB,OAAO,MAMzB,OALApB,IAAMqB,WAAU,WACK,MAAff,EAAIgB,SACNhB,EAAIgB,QAAQC,gBAAgB,GAAG,KAEhC,CAACzB,IACGQ,EAqBSkB,CAAcT,GAE9B,OACE,yBAAKT,IAAKA,GACR,kBAACJ,EAAoBuB,SAArB,CAA8BhD,MAAOkC,GACnC,kBAAC,IAAD,CACEC,SAAUA,EACVjE,QAbFoE,EAAY,EACP,IAEFH,EAASc,IAAIT,GAAcU,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAU9B,GACtBnF,MAAM,OACN4D,IAAKa,EACLW,iBAAkB1B,EAClB2B,iBAAiB,KACjBC,SAAU,SAAC5C,GAAD,OAAwBwB,EAASxB,GAzBlC,IA0BT6C,cAAe,EACflB,UAAWA,GAEVnB,QAmDI7B,kBAAO,IAAPA,CAAYC,aAxC3B,YAAqC,IAAnBP,EAAkB,EAAlBA,MAAOgB,EAAW,EAAXA,MAAOR,EAAI,EAAJA,EACtBC,EAAU7B,IADgB,EAEV6F,mBAAS,IAFC,mBAEpBC,GAFoB,WAI1BC,EAAanE,EAAE,MAAD,OAAOQ,IAG3B,OAAO,yBAAKL,UAAWF,EAAQ1B,MAC3B,kBAAC6F,EAAA,EAAD,CACEC,SAAUrE,EAAEsE,YACZnE,UAAWF,EAAQoB,aACnBkD,UAAQ,EACRC,KAAM,QACNC,QAASN,EAITtD,SAAU,SAAC6D,EAAG3D,GACVf,EAAE2E,aAAanE,EAAOO,IAE1ByB,iBAAkBA,EAClBoC,sBAAoB,EACpBC,aAAc,SAACC,EAAD,OAAUC,EAAV,EAAUA,SAAV,OACZ,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CACE1D,KAAMA,EACNE,YAAaA,EACbK,MAAO,CAACoD,YAAa,GACrBC,QAASJ,IAEVD,IAGPM,YAAa,SAACC,GAAD,OACX,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,QAAQ,WAAWrE,MAAO1B,EAAOqB,SAAU,SAAC6D,GAAD,OAAOR,EAAOQ,EAAEc,OAAOhF,mB,oCC5H/FpC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCmH,OAAQ,CACJjH,SAAU,WACV4C,KAAM,kBACNsE,aAAcpH,EAAMqH,MAAMD,aAC1B3G,gBAAiB6G,YAAKtH,EAAMU,QAAQ6G,OAAOC,MAAO,KAClD,UAAW,CACP/G,gBAAiB6G,YAAKtH,EAAMU,QAAQ6G,OAAOC,MAAO,MAEtDvG,OAAQjB,EAAMQ,QAAQ,GACtBL,MAAO,QAEXsH,WAAY,CACRC,QAAS1H,EAAMQ,QAAQ,EAAG,EAAG,EAAG,GAChCJ,OAAQ,OACRF,SAAU,WACVyH,cAAe,OACf7G,QAAS,OACTC,WAAY,SACZ6G,eAAgB,UAEpBC,UAAW,CACPzG,MAAO,UACPjB,MAAM,eAAD,OAAiBH,EAAMQ,QAAQ,GAA/B,QAETsH,WAAY,CACRJ,QAAS1H,EAAMQ,QAAQ,EAAG,EAAG,EAAG,GAChCuH,YAAY,cAAD,OAAgB/H,EAAMQ,QAAQ,GAA9B,OACXL,MAAO,YA2BAqB,kBAAO,IAAPA,CAAYC,aAvB3B,YAAyC,IAAxBC,EAAuB,EAAvBA,EAAuB,IAApBsG,eAAoB,MAAV,QAAU,EAC9BrG,EAAU7B,IAEhB,OAAO,yBAAK+B,UAAWF,EAAQwF,QAC3B,yBAAKtF,UAAWF,EAAQ8F,YACpB,kBAAC,IAAD,OAEJ,kBAACQ,EAAA,EAAD,CACEC,YAAW,iBAAaF,EAAb,OACXjC,SAAUrE,EAAEsE,aAAsB,SAATgC,EACzBrG,QAAS,CACL1B,KAAM0B,EAAQkG,UACdM,MAAOxG,EAAQmG,YAEnBM,WAAY,SAAAhC,GACM,UAAVA,EAAEiC,KACJ3G,EAAE2E,aAAa,SAAUD,EAAEc,OAAOhF,e,kBChD5CpC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACF6C,KAAM,YACN4E,QAAS1H,EAAMQ,QAAQ,QAiGhBgB,kBAAO,IAAPA,CAAYC,aA7F3B,YAAyB,IAALC,EAAI,EAAJA,EACVC,EAAU7B,IACVwI,EAAO5G,EAAE4G,KAwEf,OAAO,yBAAKzG,UAAWF,EAAQ1B,MAC3B,kBAAC,IAAD,CAAcuG,OAtEP,CACH+B,WAAW,EACXC,MAAO,CACHC,WAAY,MACZC,UAAW,MACXC,WAAY,CACRC,WAAY,KAGpBC,QAAS,CACLC,QAAS,CACLN,MAAO,CACHO,KAAM,CAAC,QAAS,SAChB7H,MAAO,CACH8H,MAAO,eACPC,MAAO,sBAKvBC,OAAQ,CACJ3F,KAAM,CAAC,OAAQ,WACflD,KAAM,IAEVe,MAAO,CAAC,UAAW,WACnB+H,MAAO,CACH,CACIJ,KAAM,WACNxF,KAAM+E,EAAKnD,KAAI,SAAAiE,GAAG,OAAIA,EAAIC,QAC1BC,UAAW,CACPnI,SAAU,MAItBoI,MAAO,CACH,CACIR,KAAM,QACNO,UAAW,CACPnI,SAAU,MAItBqI,QAAS,GACTC,KAAM,CACF,CACIpJ,KAAM,GACNqJ,OAAQ,KAGhBC,UAAW,CACPxI,SAAU,IAEdyI,OAAQ,CACJ,CACIC,KAAM,UACNd,KAAM,MACNe,MAAO,OACPvG,KAAM+E,EAAKnD,KAAI,SAAAiE,GAAG,OAAIA,EAAIW,YAE9B,CACIF,KAAM,OACNd,KAAM,MACNe,MAAO,OACPvG,KAAM+E,EAAKnD,KAAI,SAAAiE,GAAG,OAAIA,EAAIY,WAQxBC,SAAU,CACNC,SAAU,YAAc,IAEdC,EAFa,EAAXC,MACiB,GAAGC,WACClF,KAAI,SAAAmF,GAAG,OAAIA,EAAMhC,EAAK,GAAGe,QACtD3H,EAAE2E,aAAa,QAAS8D,GACxBzI,EAAEsE,aAAc,GAEpBuE,cAAe,YAEU,IAFG,EAAXC,MACS,GAAfJ,MACG3F,SACV/C,EAAE2E,aAAa,QAAS,IACxB3E,EAAEsE,aAAc,Y,iBC9FxClG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFE,MAAO,OACPC,OAAQ,OACRqK,SAAU,cAIZC,EAAQ,IAAIC,IAAkB,CAACC,cAAe,IAAKC,YAAY,IAoCtDrJ,oBAASC,aAzBxB,YAAkC,IAAZ0C,EAAW,EAAXA,SACZxC,EAAU7B,IACVE,EAAQ8K,cAEd,OAAO,yBAAKjJ,UAAWF,EAAQ1B,MAC3B,kBAAC,IAAD,MACK,gBAAEG,EAAF,EAAEA,OAAQD,EAAV,EAAUA,MAAV,OACC,kBAAC,IAAD,CACEC,OAAQA,EACR2K,SAAU5G,EAASM,OACnBuG,UAAWN,EAAMM,UACjBC,yBAA0BP,EAC1BQ,YAAa,mBArB7B,YAA0D,IAAnCrI,EAAkC,EAAlCA,MAAOwF,EAA2B,EAA3BA,IAAK8C,EAAsB,EAAtBA,OAAQ3H,EAAc,EAAdA,MAAO4H,EAAO,EAAPA,KAC9C,OAAO,kBAAC,IAAD,CAAc/C,IAAKA,EAAKgD,SAAUxI,EAAOyI,YAAa,EAAGZ,MAAOA,EAAOS,OAAQA,IACjF,gBAAEI,EAAF,EAAEA,QAASC,EAAX,EAAWA,cAAX,OAA8B,yBAAKzH,IAAKyH,EAAehI,MAAOA,GAC1D4H,EAAKvI,GAAO0I,OAkBqCE,CAAa,CAAC5I,MAA/C,EAAEA,MAAoDwF,IAAtD,EAASA,IAAkD8C,OAA3D,EAAcA,OAAqD3H,MAAnE,EAAsBA,MAAoD4H,KAAMjH,KAC7FhE,MAAOA,EACPqD,MAAO,CACHkI,aAAc1L,EAAMQ,QAAQ,GAC5BmL,UAAU,cAAD,OAAgB3L,EAAMQ,QAAQ,GAA9B,OACToL,QAAS,kBCpCvB9L,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC6L,IAAK,CACD5K,OAAQjB,EAAMQ,QAAQ,GACtBsC,KAAM,mBAEVsI,KAAM,CACFnK,OAAQjB,EAAMQ,QAAQ,EAAG,EAAG,EAAG,GAC/BsC,KAAM,EACN2H,SAAU,UAEdqB,UAAW,CACP7K,OAAQjB,EAAMQ,QAAQ,EAAG,QAIjC,SAASuL,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,OAKvB,OAJAnH,qBAAU,WACNmH,MACD,CAACD,EAAM9K,MAAO+K,IAEV,4BAAKD,EAAM9K,OAiBPM,kBAAO,IAAPA,CAAYC,aAd3B,YAAyB,IAALC,EAAI,EAAJA,EACVC,EAAU7B,IACVoM,EAASxK,EAAEyK,eAEjB,OAAO,kBAAC,IAAMzF,SAAP,KACH,kBAAC1E,EAAA,EAAD,CAAYH,UAAWF,EAAQkK,KAAMK,EAAOzH,OAA5C,SAA4E,IAAlByH,EAAOzH,QAAgB,IAAjF,WACA,yBAAK5C,UAAWF,EAAQyJ,MACpB,kBAAC,EAAD,KACKc,EAAO/G,KAAI,SAAAiH,GAAC,OAAI,SAAAb,GAAO,OAAI,kBAACQ,EAAD,CAAWC,MAAOI,EAAGH,OAAQV,eC5BnEzL,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,WACVG,KAAM,EACNF,MAAM,OACNG,IAAI,cAAD,OAAgBN,EAAMQ,QAAQ,GAA9B,OACHkJ,OAAQ1J,EAAMQ,QAAQ,GACtB4G,aAAa,KAAD,OAAOpH,EAAMqH,MAAMD,aAAnB,cAAqCpH,EAAMqH,MAAMD,aAAjD,QACZ3G,gBAAiBT,EAAMU,QAAQ2L,WAAWL,MAC1ClL,QAAS,OACTwL,cAAe,cAgBR7K,mBAZf,WACI,IAAME,EAAU7B,IAEhB,OAAO,yBAAK+B,UAAWF,EAAQ1B,MAC3B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASiB,MAAO,aAAcgB,MAAO,gBACrC,kBAAC,EAAD,CAAShB,MAAO,UAAWgB,MAAO,YAClC,kBAAC,EAAD,U,qDC9BFqK,GAAc,CAChB,MAAS,UACT,KAAQ,UACR,MAAS,UACT,QAAW,UACX,2BAA8B,UAC9B,gBAAmB,UACnB,WAAc,UACd,oBAAuB,UACvB,WAAc,UACd,UAAa,UACb,aAAgB,UAChB,cAAiB,UACjB,eAAkB,UAClB,IAAO,UACP,QAAW,UACX,mBAAsB,UACtB,YAAe,UACf,YAAe,UACf,OAAU,UACV,MAAS,UACT,eAAkB,UAClB,UAAa,UACb,aAAgB,UAChB,YAAe,UACf,UAAa,UACb,SAAY,UACZ,aAAgB,UAChB,UAAa,UACb,WAAc,UACd,wBAA2B,UAC3B,WAAc,WAGZC,GAAoB,CACtB,KAAQ,eACR,MAAS,eACT,QAAW,eACX,2BAA8B,eAC9B,gBAAmB,eACnB,WAAc,OACd,oBAAuB,OACvB,WAAc,OACd,UAAa,OACb,aAAgB,UAChB,cAAiB,UACjB,eAAkB,UAClB,IAAO,MACP,QAAW,OACX,mBAAsB,OACtB,YAAe,OACf,YAAe,QACf,OAAU,OACV,MAAS,QACT,eAAkB,OAClB,UAAa,SACb,aAAgB,SAChB,YAAe,SACf,UAAa,aACb,SAAY,aACZ,aAAgB,aAChB,UAAa,MACb,WAAc,OACd,wBAA2B,OAC3B,WAAc,OACd,MAAS,UAGPC,GAAyB,CAC3B,OAAU,UACV,eAAgB,UAChB,KAAQ,UACR,QAAW,UACX,IAAO,UACP,KAAQ,UACR,MAAS,UACT,MAAS,UACT,OAAU,UACV,WAAc,UACd,IAAO,UACP,KAAQ,UACR,KAAQ,WAINC,GAAgB,CAClB,WAAc,aACd,YAAe,cACf,KAAQ,OACR,QAAW,UACX,QAAW,UACX,MAAS,QACT,IAAO,MACP,UAAa,YACb,eAAkB,iBAClB,OAAU,SACV,aAAgB,eAChB,MAAS,QACT,gBAAmB,kBACnB,oBAAuB,sBACvB,SAAY,WACZ,UAAa,YACb,YAAe,cACf,WAAc,aACd,UAAa,YACb,aAAgB,eAChB,WAAc,aACd,wBACI,0BACJ,mBAAsB,qBACtB,YAAe,cACf,eAAkB,iBAClB,2BAA8B,6BAC9B,cAAiB,gBACjB,aAAgB,eAChB,WAAc,aACd,UAAa,YACb,MAAS,UAGPC,GAAuB,GAC7BC,OAAOC,KAAKH,IAAeI,SAAQ,SAAAzE,GAAG,OAAIsE,GAAqBD,GAAcrE,IAAQA,KC9GrF,IAAMvI,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFa,QAAS,OACT8G,eAAgB,SAChB7G,WAAY,UAEhBgM,UAAW,CACPrF,QAAS,GAEbxG,MAAO,CACHD,OAAQjB,EAAMQ,QAAQ,EAAG,IAE7BuC,aAAc,CACViK,SAAU,QACVC,SAAU,QAEdC,KAAM,CACFjM,OAAQjB,EAAMQ,QAAQ,SAgEfgB,mBAAO,IAAPA,CAAYC,aA5D3B,YAA6B,IAAD,EAAJC,EAAI,EAAJA,EACdC,EAAU7B,KADQ,EAEF6F,mBAAS,IAFP,mBAEjB2E,EAFiB,KAEZ1E,EAFY,KAIlBC,EAAanE,EAAEyL,cACfC,EAAkB,GALA,eAOIvH,GAPJ,IAOxB,2BAAwC,CAAC,IAA9BwH,EAA6B,QAChCA,EAAcC,SAAShD,KACvB8C,EAAgBG,KAAKF,GACV,IAVK,8BAexB,OAAO,yBAAKxL,UAAWF,EAAQ1B,MAQ3B,kBAAC+B,EAAA,EAAD,CAAYH,UAAWF,EAAQT,OAA/B,qBACA,kBAAC4E,EAAA,EAAD,CACEjE,UAAWF,EAAQoB,aACnBkD,UAAQ,EACRC,KAAM,QACNsH,UAAW,EACXrH,QAASiH,EAAgBjI,KAAI,SAAAsI,GAAC,OAAIf,GAAce,MAChDvL,MAAOR,EAAEgM,iBAAiBvI,KAAI,SAAAsI,GAAC,OAAIf,GAAce,MACjDlL,SAAU,SAAC6D,EAAG3D,GACVf,EAAEiM,gBACFjM,EAAEkM,uBAAuBnL,EAAS0C,KAAI,SAAAsI,GAAC,OAAId,GAAqBc,QAEpEnH,sBAAoB,EACpBC,aAAc,SAACC,EAAD,OAAUC,EAAV,EAAUA,SAAV,OACZ,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CACEnD,MAAO,CAACoD,YAAa,GACrBC,QAASJ,IAEVD,IAGPM,YAAa,SAACC,GACV,OAAO,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CACP8G,WAAU,2BAEC9G,EAAO8G,YAFR,IAGFC,oBAAqDC,IAArChH,EAAO8G,WAAWC,eAA6B,GAAG/G,EAAO8G,WAAWC,eAAeE,QAAO,SAACC,EAAGC,GAAJ,OAAUA,EAAI,OAGhI3L,SAAU,SAAC6D,GAAD,OAAOR,EAAOQ,EAAEc,OAAOhF,mBCjFzCpC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFE,MAAO,OACPC,OAAQ,OACRU,QAAS,OACT8G,eAAgB,SAChB7G,WAAY,UAEhBoN,IAAK,CACDhO,MAAO,YAoCAsB,oBAhCf,YAAuB,IAAPM,EAAM,EAANA,IACNJ,EAAU7B,KAuBhB,OAAO,yBAAK+B,UAAWF,EAAQ1B,MAC3B,yBAAK4B,UAAWF,EAAQwM,IAAKpM,IAAKA,EAAKD,IAAKC,QCpC9CjC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCmH,OAAQ,CACJjH,SAAU,WACV4C,KAAM,kBACNsE,aAAcpH,EAAMqH,MAAMD,aAC1B3G,gBAAiB6G,YAAKtH,EAAMU,QAAQ6G,OAAOC,MAAO,KAClD,UAAW,CACP/G,gBAAiB6G,YAAKtH,EAAMU,QAAQ6G,OAAOC,MAAO,MAEtDvG,OAAQjB,EAAMQ,QAAQ,GACtBL,MAAO,QAEXsH,WAAY,CACRC,QAAS1H,EAAMQ,QAAQ,EAAG,EAAG,EAAG,GAChCJ,OAAQ,OACRF,SAAU,WACVyH,cAAe,OACf7G,QAAS,OACTC,WAAY,SACZ6G,eAAgB,UAEpBC,UAAW,CACPzG,MAAO,UACPjB,MAAM,eAAD,OAAiBH,EAAMQ,QAAQ,GAA/B,QAETsH,WAAY,CACRJ,QAAS1H,EAAMQ,QAAQ,EAAG,EAAG,EAAG,GAChCuH,YAAY,cAAD,OAAgB/H,EAAMQ,QAAQ,GAA9B,OACXL,MAAO,YA0BAqB,mBAAO,IAAPA,CAAYC,aAtB3B,YAAsB,IAALC,EAAI,EAAJA,EACPC,EAAU7B,KAEhB,OAAO,yBAAK+B,UAAWF,EAAQwF,QAC3B,yBAAKtF,UAAWF,EAAQ8F,YACpB,kBAAC,IAAD,OAEJ,kBAACQ,EAAA,EAAD,CACEC,YAAW,oBACXvG,QAAS,CACL1B,KAAM0B,EAAQkG,UACdM,MAAOxG,EAAQmG,YAEnBM,WAAY,SAAAhC,GACM,UAAVA,EAAEiC,KACJ3G,EAAE2E,aAAa,UAAWD,EAAEc,OAAOhF,eC7C7CpC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,WACVwH,QAAS1H,EAAMQ,QAAQ,GACvBH,KAAK,eAAD,OAAiBL,EAAMQ,QAAQ,GAA/B,OACJ4N,MAAOpO,EAAMQ,QAAQ,GACrBF,IAAKN,EAAMQ,QAAQ,GACnBJ,OAAO,eAAD,OAAiBJ,EAAMQ,QAAQ,KAA/B,OACN4G,aAAcpH,EAAMqH,MAAMD,aAC1B3G,gBAAiBT,EAAMU,QAAQ2L,WAAWL,OAE9CqC,SAAU,CACNnO,SAAU,WACVI,IAAK,OACLH,MAAM,eAAD,OAAiBH,EAAMQ,QAAQ,GAA/B,OACLJ,OAAQ,oBAERuL,UAAW,iBAEf2C,SAAU,CACNjC,WAAW,mBAMfkC,QAAS,CACLrO,SAAU,WACVsO,OAAQ,IACRpO,OAAQ,OACRU,QAAS,OACT8G,eAAgB,gBAChBzH,MAAO,OACPsO,aAAczO,EAAMQ,QAAQ,GAC5BC,gBAAiBT,EAAMU,QAAQ2L,WAAWL,OAE9CgC,OAAQ,CACJlL,KAAM,mBAEVoF,YAAa,CACTpF,KAAM,GAEV4L,KAAM,CACF5N,QAAS,OACTgC,KAAM,kBACN8E,eAAgB,SAChB7G,WAAY,UAEhB4N,WAAY,CACR7L,KAAM,uBA8CCtB,mBAAO,IAAK,MAAZA,CAAmBC,aA1ClC,YAA4B,IAAVmN,EAAS,EAATA,IAAKlN,EAAI,EAAJA,EACbC,EAAU7B,KADO,EAGC6F,mBAAS,GAHV,mBAGhBkJ,EAHgB,KAGVC,EAHU,KAKvB,OAAO,yBAAKjN,UAAWF,EAAQ1B,MAC3B,yBAAK4B,UAAWF,EAAQ4M,SACpB,kBAAC,GAAD,MAEA,kBAAC,GAAD,MACA,yBAAK1M,UAAWF,EAAQ+M,MACpB,kBAAC1M,EAAA,EAAD,KAAaN,EAAEqN,aAAatK,OAA5B,kBACA,kBAACuK,GAAA,EAAD,CACEnN,UAAWF,EAAQgN,WACnBE,KAAMA,EACNI,MAAOC,KAAKC,KAAKzN,EAAEqN,aAAatK,OAb3B,IAcLlC,SAAU,SAAC6D,EAAGgJ,GAAJ,OAAgBN,EAAQM,QAG5C,kBAACC,GAAA,EAAD,CAAUC,WAAY,IAAK9O,QAAS,GAAIqB,UAAWF,EAAQ0M,SAAUkB,KAAM,GAEnE7N,EAAEqN,aACCS,MApBI,IAoBGX,EAAO,GApBV,GAoB2BA,GAC/B1J,KAAI,SAAAgJ,GAAQ,IACFjN,EAASQ,EAAE+N,aAAatB,EAAIuB,KAA5BxO,MACX,OAAO,kBAACyO,GAAA,EAAD,CAActH,IAAG,UAAK8F,EAAIuB,IAAT,YAAgBvB,EAAIyB,KAClBL,KAAM,EAAGM,KAAM,EACfrM,MAAO,CAACsM,OAAQ,WAChBC,QAAS,kBAAMnB,EAAIoB,WAAW7B,EAAIuB,IAAKvB,EAAIyB,IAAKzB,EAAI8B,OAC1E,kBAAC,GAAD,CAAOlO,IAAKoM,EAAI8B,MAChB,kBAACC,GAAA,EAAD,CACEhP,MAAOA,EACPiP,cAAc,MACdC,eAAe,OACfvO,UAAWF,EAAQ2M,qB,sBCzFrCxO,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,WACVE,OAAQ,YA2FGoB,mBAAO,IAAPA,CAAYC,aAvF3B,YAA2B,IAANC,EAAK,EAALA,EACbC,EAAU7B,KACVqN,EAAgBzL,EAAE2O,WAAazD,OAAOC,KAAKJ,IAA0BG,OAAOC,KAAKN,IAF/D,EAGa7K,EAAE4O,UAAjCC,EAHkB,EAGlBA,IAAKC,EAHa,EAGbA,IAAKC,EAHQ,EAGRA,WAAYnI,EAHJ,EAGIA,KAC5BmI,EAAaA,EAAWC,MAAK,SAACrL,EAAGC,GAAJ,OAAU6H,EAAchL,QAAQkD,GAAK8H,EAAchL,QAAQmD,MACxFgD,EAAOA,EAAKoI,MAAK,SAACrL,EAAGC,GACnB,IAAMqL,EAAKF,EAAWtO,QAAQkD,EAAEwE,MAAO+G,EAAKH,EAAWtO,QAAQmD,EAAEuE,MACjE,OAAI8G,IAAOC,EAAWD,EAAKC,EACpB,KAWTC,QAAQC,IAAIxI,GACZ,IApBwB,EAoBpByI,EAAQC,MAAMC,KAAK,CAAExM,OAAQ+L,EAAMD,EAAM,IAAK,SAACtC,EAAGC,GAAJ,OAAUA,EAAIqC,KAC5D9J,EAAW,GACTyK,EAA0BxP,EAAEgM,iBAAiBvI,KAAI,SAAAgM,GAAG,OAAI3E,GAAkB2E,MAtBxD,eAuBNV,GAvBM,IAuBxB,2BAA8B,CAAC,IAApBU,EAAmB,QACxBzP,EAAE0P,iBACA1P,EAAE2O,WACAa,EAAwB5D,SAAS6D,GACnC1K,EAAS0K,IAAO,EACb1K,EAAS0K,IAAO,EAGjBzP,EAAEgM,iBAAiBJ,SAAS6D,GAC9B1K,EAAS0K,IAAO,EACb1K,EAAS0K,IAAO,EAGpB1K,EAAS0K,IAAO,GApCC,8BA+ExB,OAAO,yBAAKtP,UAAWF,EAAQ1B,MAC7B,kBAAC,IAAD,CAAcuD,MAAO,CACnBrD,MAAO,OACPC,OAAQ,QACPiR,UAAQ,EAAC7K,OA1CL,CACLgD,QAAS,CACP8H,QAAS,OACTC,YAAa,CACXxI,KAAM,WAGVG,OAAQ,CACNsI,UAAW,SAAA3H,GAAI,OAAInI,EAAE2O,WAAaxG,EAAO6C,GAAc7C,IACvDtG,KAAMkN,EACNgB,EAAG,SACHC,EAAG,SACHjL,SAAUA,GAEZrF,MAAOqP,EAAWtL,KAAI,SAAAgM,GAAG,OAAIzP,EAAE2O,WAAa5D,GAAuB0E,GAAO5E,GAAY4E,MAEtF1H,KAAM,CACJnJ,IAAK,KACLD,KAAM,KACN+N,MAAO,KACP1E,OAAQhI,EAAE2O,WAAa,MAAQ,MAC/BsB,cAAc,GAEhBxI,MAAO,CACL,CACEJ,KAAM,WACNxF,KAAMwN,IAGVxH,MAAO,CACL,CACER,KAAM,UAGVa,OAAQtB,UClFRxI,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,WACVE,OAAQ,YAoGGoB,mBAAO,IAAPA,CAAYC,aAhG3B,YAAwB,IAANC,EAAK,EAALA,EACVC,EAAU7B,KACVqN,EAAgBzL,EAAE2O,WAAWzD,OAAOC,KAAKJ,IAAwBG,OAAOC,KAAKN,IAF9D,EAGkB7K,EAAEkQ,OAAnCrB,EAHe,EAGfA,IAAKC,EAHU,EAGVA,IAAKC,EAHK,EAGLA,WAAYmB,EAHP,EAGOA,OAC5BnB,EAAaA,EAAWC,MAAK,SAACrL,EAAGC,GAAJ,OAAU6H,EAAchL,QAAQkD,GAAK8H,EAAchL,QAAQmD,MACxFsM,EAASA,EAAOlB,MAAK,SAACrL,EAAGC,GACvB,IAAMqL,EAAKF,EAAWtO,QAAQkD,EAAE,IAAKuL,EAAKH,EAAWtO,QAAQmD,EAAE,IAC/D,OAAIqL,IAAOC,EAAWD,EAAKC,EACpBvL,EAAE,GAAKC,EAAE,MAIlB,IAAMuM,EAAS,IAAIC,IACnBF,EAAO9E,SAAQ,SAAApL,GAAC,OAAImQ,EAAOE,IAAIrQ,EAAE,OAEjC,IAfqB,EAejB+E,EAAW,GACTyK,EAA0BxP,EAAEgM,iBAAiBvI,KAAI,SAAAgM,GAAG,OAAI3E,GAAkB2E,MAhB3D,eAiBHV,GAjBG,IAiBrB,2BAA8B,CAAC,IAApBU,EAAmB,QACxBzP,EAAE0P,iBACA1P,EAAE2O,WACAa,EAAwB5D,SAAS6D,GACnC1K,EAAS0K,IAAO,EACb1K,EAAS0K,IAAO,EAGjBzP,EAAEgM,iBAAiBJ,SAAS6D,GAC9B1K,EAAS0K,IAAO,EACb1K,EAAS0K,IAAO,EAGpB1K,EAAS0K,IAAO,GA9BF,8BAwFrB,OAAO,yBAAKtP,UAAWF,EAAQ1B,MAC7B,kBAAC,IAAD,CAAcuD,MAAO,CACnBrD,MAAO,OACPC,OAAQ,QACPoG,OA1DI,CACLwL,kBAAmB,IACnBxI,QAAS,CACP8H,QAAS,OACTC,YAAa,CACXxI,KAAM,OACNkJ,UAAW,CACT7Q,MAAO,kBACPjB,MAAO,EACP4I,KAAM,WAIZG,OAAQ,CACNsI,UAAW,SAAA3H,GAAI,OAAInI,EAAE2O,WAAWxG,EAAK6C,GAAc7C,IACnDtG,KAAMkN,EACNgB,EAAG,SACHC,EAAG,SACHjL,SAAUA,GAGZrF,MAAOqP,EAAWtL,KAAI,SAAAgM,GAAG,OAAIzP,EAAE2O,WAAW5D,GAAuB0E,GAAK5E,GAAY4E,MAClFe,WAAY,CACV7R,KAAM,KACN+N,MAAO,KACP9N,IAAK,KACLoJ,OAAQhI,EAAE2O,WAAW,MAAM,MAC3BtH,KAAM,QACNwH,MACAC,MACAe,YAAa,CACX3O,MAAO,CACLuP,MAAM,KAIZvI,OAAQ,CACN,CACEb,KAAM,aACNqJ,SAAU,CACRC,UAAW,CACTC,WAAY,GACZC,YAAa,uBAGjBhP,KAAMqO,EACNhP,MAAO,CACLuP,MAAM,aCjFZrS,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,WACVG,KAAK,eAAD,OAAiBL,EAAMQ,QAAQ,GAA/B,OACJL,MAAM,eAAD,OAAiBH,EAAMQ,QAAQ,KAA/B,OACLkJ,OAAQ1J,EAAMQ,QAAQ,GACtBJ,OAAO,eAAD,OAAiBJ,EAAMQ,QAAQ,KAA/B,OACN4G,aAAcpH,EAAMqH,MAAMD,aAC1B3G,gBAAiBT,EAAMU,QAAQ2L,WAAWL,MAC1CtE,QAAS1H,EAAMQ,QAAQ,IAEzBgS,SAAU,CACRtS,SAAU,WACVY,QAAS,OACTC,WAAY,SACZX,OAAQ,OAEVqS,UAAU,CACRtS,MAAO,MACPW,QAAS,OACTC,WAAY,SACZ6G,eAAgB,UAElB8K,KAAM,CACJxS,SAAU,WACVE,OAAQ,WAiDGoB,mBAAO,IAAPA,CAAYC,aA7C3B,YAA8B,IAANC,EAAK,EAALA,EAChBC,EAAU7B,KADW,EAEE2D,IAAMkC,UAAS,GAFjB,mBAEpBiM,EAFoB,KAEZe,EAFY,KAkB3B,OAAO,yBAAK9Q,UAAWF,EAAQ1B,MAC7B,kBAAC2S,GAAA,EAAD,CAAW/Q,UAAWF,EAAQ6Q,UAC5B,yBAAK3Q,UAAWF,EAAQ8Q,WACtB,kBAACzQ,EAAA,EAAD,YACE,kBAAC6Q,GAAA,EAAD,CAAQhM,QAAS+K,EAAQrP,SAlBT,SAACC,GACvBmQ,EAAWnQ,EAAM0E,OAAOL,YAmBpB,kBAAC7E,EAAA,EAAD,CAAY8Q,MAAI,GAAhB,WAEF,yBAAKjR,UAAWF,EAAQ8Q,WACtB,kBAACzQ,EAAA,EAAD,iBACA,kBAAC6Q,GAAA,EAAD,CAAQhM,QAASnF,EAAE0P,iBAAkB7O,SAhBd,SAACC,GAC5Bd,EAAE0P,kBAAoB1P,EAAE0P,oBAgBpB,kBAACpP,EAAA,EAAD,CAAY8Q,MAAI,GAAhB,kBAEF,yBAAKjR,UAAWF,EAAQ8Q,WACtB,kBAACzQ,EAAA,EAAD,oBACA,kBAAC6Q,GAAA,EAAD,CAAQhM,QAASnF,EAAE2O,WAAY9N,SAzBT,SAACC,GAC3Bd,EAAE2O,YAAc3O,EAAE2O,cAyBd,kBAACrO,EAAA,EAAD,CAAY8Q,MAAI,GAAhB,aAKJ,yBAAKjR,UAAWF,EAAQ+Q,MACrBd,EAAS,kBAAC,GAAD,MAAa,kBAAC,GAAD,Y,+BC3EvB9R,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,WACVkO,MAAOpO,EAAMQ,QAAQ,GACrBL,MAAM,eAAD,OAAiBH,EAAMQ,QAAQ,KAA/B,OACLkJ,OAAQ1J,EAAMQ,QAAQ,GACtBJ,OAAO,eAAD,OAAiBJ,EAAMQ,QAAQ,KAA/B,OACN4G,aAAcpH,EAAMqH,MAAMD,aAC1B3G,gBAAiBT,EAAMU,QAAQ2L,WAAWL,MAC1CtE,QAAS1H,EAAMQ,QAAQ,IAE3B0H,YAAY,CACRpH,QAAS,OACTV,OAAQ,YAKV+F,GAAU,CACZ4M,OAAQ,CAAC,WACTC,eAAe,EACfC,eAAe,EACfC,WAAY,SACZC,UAAW,CAAC,GAAI,IAChBC,UAAW,SACXC,WAAY,SACZ3L,QAAS,EACT4L,UAAW,EACXC,eAAgB,CAAC,EAAG,GACpBC,MAAO,OACPC,OAAQ,cACRC,mBAAoB,KAuCTlS,mBAAO,IAAPA,CAAYC,aApC3B,YAAyB,IAALC,EAAI,EAAJA,EACVC,EAAU7B,KACV6T,EAAQjS,EAAEkS,YAGVC,EAAY,CAEdC,aAAc,SAAAC,GACV,OAAIrS,EAAEsS,aACEtS,EAAEuS,aAAeF,EAAKG,KACf,UACR,WAEXC,YAAa,SAAAJ,GAEJrS,EAAEsS,YAIEtS,EAAEsS,aAAetS,EAAEuS,aAAeF,EAAKG,KAC5CxS,EAAEuS,YAAcF,EAAKG,MAGrBxS,EAAEsS,aAAc,EAChBtS,EAAEuS,YAAc,KARhBvS,EAAEsS,aAAc,EAChBtS,EAAEuS,YAAcF,EAAKG,QAajC,OAAO,yBAAKrS,UAAWF,EAAQ1B,MAC1ByB,EAAEsS,YAAa,yBAAKnS,UAAWF,EAAQuG,YAAa6H,QAAS,kBAAMrO,EAAEiM,kBAAiB,kBAAC3L,EAAA,EAAD,8BAA+BN,EAAEuS,cAA2B,kBAAC,KAAD,OAAmB,yBAAKpS,UAAWF,EAAQuG,cAC9L,kBAAC,KAAD,CAAgB2L,UAAWA,EAAW1N,QAASA,GAASwN,MAAOA,S,oICnEjE7T,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,GACNmU,OAAQ,CACJrM,YAAa/H,EAAMQ,QAAQ,QA6DpBgB,qBAASC,aAzDxB,YAAgD,IAA9B4S,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,WACxB5S,EAAU7B,KAD2B,EAGnB2D,IAAMkC,UAAS,GAHI,mBAGpC6O,EAHoC,KAG9BC,EAH8B,KAIrC5N,EAAUyN,EAAMlP,QAAO,SAACsP,EAAeC,GAAhB,OAAiCD,GAA6C,YAA5BC,EAAaC,cAA0B,GAChHC,GAAiBhO,GAAWyN,EAAMlP,QAAO,SAACsP,EAAeC,GAAhB,OAAiCD,GAA6C,YAA5BC,EAAaC,cAA0B,GAUxI,OAAO,kBAAC,IAAMlO,SAAP,KACH,kBAACoO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACpO,EAAA,EAAD,CACEqO,KAAK,QACLnO,QAASA,EACTgO,cAAeA,EACfI,UAAW,EACXzR,MAAO,CAACpC,MAAOmL,GAAY8H,IAC3BtE,QAjBU,WACPwE,EAAT1N,EAAoByN,EAAMnP,KAAI,SAAA+P,GAAG,OAAIA,EAAIrS,SAC7ByR,EAAMtG,QAAO,SAAAkH,GAAG,MAAuB,YAAnBA,EAAIN,cAA0BzP,KAAI,SAAA+P,GAAG,OAAIA,EAAIrS,WAgBvEsS,eAAa,KAGnB,kBAACC,GAAA,EAAD,CAAczU,QAAO,UAAK+L,GAAc2H,GAAnB,YAA+BC,EAAM7P,OAArC,OACrB,kBAAC4Q,GAAA,EAAD,KACKb,EACC,kBAACc,GAAA,EAAD,CAAYvF,QAAS,kBAAM0E,GAAQ,MACnC,kBAACc,GAAA,EAAD,CAAYxF,QAAS,kBAAM0E,GAAQ,QAG7C,kBAACe,GAAA,EAAD,CAAUC,GAAIjB,EAAMkB,QAAS,OAAQC,eAAa,GAC9C,kBAACC,GAAA,EAAD,CAAMC,UAAW,MAAOC,gBAAc,GACjCxB,EAAMnP,KAAI,SAAC+P,EAAKa,GACb,OAAO,kBAACjB,GAAA,EAAD,CAAUjT,UAAWF,EAAQyS,QAChC,kBAACW,GAAA,EAAD,KACI,kBAACpO,EAAA,EAAD,CACEqO,KAAK,QACLnO,QAA4B,YAAnBqO,EAAIN,WACb7E,QAAS,kBAhCdiG,EAgCiCd,EAAIrS,WA/BtD0R,EAAW,CAACyB,IADK,IAAAA,GAiCKf,UAAW,EACXzR,MAAO,CAACpC,MAAOmL,GAAY8H,IAC3Bc,eAAa,KAGnB,kBAACC,GAAA,EAAD,CAAczU,QAASoV,EAAM,eChD/CjW,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,GACNgW,SAAU,CACNnV,QAAS,OACTmM,SAAU,OACVrF,eAAgB,iBAEpBsO,IAAK,CACDhW,SAAU,WACVY,QAAS,OACTwL,cAAe,MACf1E,eAAgB,SAChB7G,WAAY,SACZZ,MAAO,QAEXgW,QAAS,CACLjW,SAAU,WACV4C,KAAM,EACN7B,OAAQjB,EAAMQ,QAAQ,EAAG,IAE7B2N,IAAK,CACDjO,SAAU,WACVI,IAAK,MACLD,KAAM,MACNsL,UAAW,yBAEfyK,KAAM,CACFlW,SAAU,WACVI,IAAK,MACLD,KAAM,MACNsL,UAAW,wBACXlB,SAAU,UAEd4L,IAAK,CACDnW,SAAU,YAEd0C,MAAO,CACH1C,SAAU,WACVI,IAAK,EACL8N,MAAO,EACP1G,QAAS1H,EAAMQ,QAAQ,IACvBC,gBAAiB,qBACjBW,MAAO,WAEXkV,QAAS,CACLpW,SAAU,WACVC,MAAO,OACPsK,SAAU,UAEd8L,QAAS,CACLtJ,SAAU,YAqGHzL,mBAAO,IAAK,MAAZA,CAAmBC,aAjGlC,YAA+B,IAAVC,EAAS,EAATA,EAAGkN,EAAM,EAANA,IACdjN,EAAU7B,KACVwU,EAAQ5S,EAAE4S,MAFU,EAGL5S,EAAE+N,aAAab,EAAI4H,YAAY,IAA7CtV,EAHmB,EAGnBA,MAAO+O,EAHY,EAGZA,IACPsG,EAAW7U,EAAE+U,aAAa7H,EAAI4H,YAAY,GAAI5H,EAAI4H,YAAY,IAA9DD,QAJmB,EAMA5Q,mBAAS,CAC/B+Q,WAAY,CACRtW,OAAQ,EACRD,MAAO,GAEXwW,QAAS,CAAC,EAAG,KAXS,mBAMnBC,EANmB,KAMZC,EANY,KA2BpBC,EAAe,SAAAC,GACjBA,EAAQjK,SAAQ,SAAAjK,GAAU,IACf+R,EAAcN,EAAMzR,GAApB+R,WACPN,EAAMzR,GAAO+R,WAA4B,YAAfA,EAA2B,SAAW,cAIlEnE,EAAa,GAOnB,OANc,OAAV6D,GACAA,EAAMxH,SAAQ,SAACoI,EAAKrS,GACX4N,EAAWuG,eAAe9B,EAAIb,WAAU5D,EAAWyE,EAAIb,SAAW,IACvE5D,EAAWyE,EAAIb,SAAS9G,KAAxB,aAA8B1K,SAAUqS,OAGzC,kBAAC+B,GAAA,EAAD,CAAQzC,KAAM5F,EAAIsI,WAAYC,QAASvI,EAAIwI,YAAanK,UAAU,GACrE,kBAACoK,GAAA,EAAD,KACe,OAAV/C,EACC,kBAACgD,GAAA,EAAD,MACA,yBAAKzV,UAAWF,EAAQ1B,MACpB,yBAAK4B,UAAWF,EAAQsU,UACpB,kBAACjU,EAAA,EAAD,CAAYiF,QAAS,MAChB/F,GAEL,kBAACqW,GAAA,EAAD,CAAQC,KAAMvH,EAAKhJ,QAAS,aAA5B,UAEJ,yBAAKpF,UAAWF,EAAQuU,KACpB,yBAAKrU,UAAWF,EAAQwU,QACnB3S,MAAO,CAACrD,MAAOyW,EAAMD,QAAQ,GAAIvW,OAAQwW,EAAMD,QAAQ,KACxD,yBAAK9U,UAAWF,EAAQwM,IACnBpM,IAAK6M,EAAI4H,YAAY,GAAI1U,IAAK8M,EAAI4H,YAAY,GAC9CvK,OA3CT,SAAC,GAAmB,IAAVkC,EAAS,EAAjBjH,OACV+F,EAA+B,IAApBwK,OAAOC,WACtBC,EAAiC,GAArBF,OAAOG,YACfpE,EAAQtE,KAAKqB,IAAIoH,EAAYxJ,EAAI0J,cAAe5K,EAAWkB,EAAI2J,cACrEjB,EAAS,CACLH,WAAY,CACRtW,OAAQ+N,EAAI0J,cACZ1X,MAAOgO,EAAI2J,cAEfnB,QAAS,CAACnD,EAAQrF,EAAI2J,aAActE,EAAQrF,EAAI0J,kBAmC7BrU,MAAO,CAACrD,MAAOyW,EAAMD,QAAQ,GAAIvW,OAAQwW,EAAMD,QAAQ,MAC5D,yBAAK9U,UAAWF,EAAQyU,KACnB5S,MAAO,CAACrD,MAAOyW,EAAMD,QAAQ,GAAIvW,OAAQwW,EAAMD,QAAQ,KACvDrC,EAAMnP,KAAI,SAACjD,EAAOW,GACf,OAAO,yBAAKwF,IAAKxF,EACLhB,UAAWF,EAAQ0U,IACnB7S,MACI,CACInD,KAAK,GAAD,OAAK,IAAM6B,EAAMgT,IAAI,GAAK0B,EAAMF,WAAWvW,MAA3C,KACJG,IAAI,GAAD,OAAK,IAAM4B,EAAMgT,IAAI,GAAK0B,EAAMF,WAAWtW,OAA3C,KACHD,MAAM,GAAD,OAAK,KAAO+B,EAAMgT,IAAI,GAAKhT,EAAMgT,IAAI,IAAM0B,EAAMF,WAAWvW,MAA5D,KACLC,OAAO,GAAD,OAAK,KAAO8B,EAAMgT,IAAI,GAAKhT,EAAMgT,IAAI,IAAM0B,EAAMF,WAAWtW,OAA5D,KACNK,gBAAiB6G,YAAKiF,GAAYrK,EAAMmS,SAAU,IAClDO,WAAY1S,EAAM0S,aAElC,yBAAK/S,UAAWF,EAAQiB,OAAQ8J,GAAcxK,EAAMmS,gBAKpE,yBAAKxS,UAAWF,EAAQ2U,QAAS9S,MAAO,CAACpD,OAAQwW,EAAMD,QAAQ,KAC3D,kBAACf,GAAA,EAAD,CAAME,gBAAc,GACflJ,OAAOC,KAAK4D,GACVC,MAAK,SAACrL,EAAGC,GAAJ,OAAUmL,EAAWnL,GAAGb,OAASgM,EAAWpL,GAAGZ,UACpDU,KAAI,SAAAkP,GACD,OAAO,kBAAC,GAAD,CAAShM,IAAKgM,EACLA,QAASA,EAASC,MAAO7D,EAAW4D,GACpCE,WAAYuC,UAM9C,kBAAC9U,EAAA,EAAD,CAAYH,UAAWF,EAAQ4U,SAAUA,UC3JrDzW,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,WACVG,KAAM,EACNF,MAAM,OACNG,IAAI,cAAD,OAAgBN,EAAMQ,QAAQ,GAA9B,OACHkJ,OAAQ1J,EAAMQ,QAAQ,GACtB4G,aAAa,KAAD,OAAOpH,EAAMqH,MAAMD,aAAnB,cAAqCpH,EAAMqH,MAAMD,aAAjD,QACZ3G,gBAAiBT,EAAMU,QAAQ2L,WAAWL,MAC1ClL,QAAS,OACTwL,cAAe,UAEnBpL,MAAM,CACFwG,QAAS,OACT2L,WAAY,QAEhB0E,QAAQ,CACJrQ,QAAS,oBACT2L,WAAY,QAEhB2E,SAAS,CACLtQ,QAAS,YAKF,SAASuQ,KACpB,IAAMtW,EAAU7B,KAEhB,OAAO,yBAAK+B,UAAWF,EAAQ1B,MAC3B,kBAAC+B,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQT,OAA5C,0EAIA,kBAACc,EAAA,EAAD,CAAaiF,QAAQ,KAAKpF,UAAWF,EAAQoW,SAA7C,8FAIA,kBAAC/V,EAAA,EAAD,CAAaiF,QAAQ,KAAKpF,UAAWF,EAAQqW,UAA7C,y4B,sDClCFlY,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,WACVwH,QAAS1H,EAAMQ,QAAQ,GACvBH,KAAK,eAAD,OAAiBL,EAAMQ,QAAQ,GAA/B,OACJ4N,MAAOpO,EAAMQ,QAAQ,GACrBF,IAAKN,EAAMQ,QAAQ,GACnBJ,OAAO,gBAAD,OAAkBJ,EAAMQ,QAAQ,GAAhC,OACN4G,aAAcpH,EAAMqH,MAAMD,aAC1B3G,gBAAiBT,EAAMU,QAAQ2L,WAAWL,MAC1CvB,SAAU,UAEdvJ,MAAO,CACHwG,QAAS,sBACT2L,WAAY,QAEhB6E,OAAQ,CACJxQ,QAAS,sBACTuF,SAAU,UAEdkL,WAAY,CACRrX,QAAS,QACT4G,QAAS,sBACTuF,SAAU,SAEdqJ,QAAS,CACLxV,QAAS,QACT4G,QAAS,sBACTvH,MAAO,OAEXiY,MAAO,CACHtX,QAAS,QACT4G,QAAS,qBACTvH,MAAO,OAEXkY,MAAO,CACH3Q,QAAS,sBAEb4Q,GAAI,CACAC,YAAa,mBAEjBC,GAAI,CACAD,YAAa,mBAEjBE,IAAK,CACDC,UAAW,mBAEfC,IAAK,CACDC,aAAc,uBA8FPpX,mBAAO,IAAPA,CAAYC,aAzF3B,YAA4B,IAANC,EAAK,EAALA,EACZC,EAAU7B,KAEV+Y,EAAY,CACd,KAAQ,sCACR,IAAO,YACP,UAAW,yBACX,QAAW,4DACX,UAAa,oCACb,MAAS,QACT,KAAQ,2GACR,IAAO,MACP,MAAS,eACT,gBAAiB,kBACjB,KAAQ,oCACR,gBAAiB,0EACjB,QAAW,iDAOf,OAAO,yBAAKhX,UAAWF,EAAQ1B,MAC3B,kBAAC+B,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQT,OAA5C,kBAGA,yBAAKa,IAAK+W,KAAejX,UAAWF,EAAQwW,aAC5C,kBAACnW,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQ2U,SAA5C,2sBAGmI,uBAAG9S,MAAO,CAAE1C,QAAS,SAAUM,MAAO,QAAU2O,QAZnK,WAChBrO,EAAEU,OAAS,aAWwH,sBAHnI,KAOA,kBAACJ,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQT,OAA5C,gBAGA,wBAAIW,UAAWF,EAAQyW,OACnB,4BACI,uBAAGZ,KAAK,wFAAR,0BAEJ,4BACI,uBAAGA,KAAK,qCAAR,uCAEJ,4BACI,uBAAGA,KAAK,6CAAR,2DAEJ,4BACI,uBAAGA,KAAK,qDAAR,gDAIR,kBAACxV,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQT,OAA5C,2BAGA,yBAAKa,IAAKgX,KAAUlX,UAAWF,EAAQuW,SACvC,kBAAClW,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQ2U,SAA5C,iSAIA,kBAACtU,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQT,OAA5C,0BAGA,2BAAOW,UAAWF,EAAQ0W,OACtB,4BACI,wBAAIxW,UAAWmX,aAAKrX,EAAQ2W,GAAI3W,EAAQgX,MAAxC,cACA,wBAAI9W,UAAWF,EAAQgX,KAAvB,aAEH/L,OAAOC,KAAKgM,GAAW1T,KAAI,SAACkD,EAAKxF,GAC9B,OAAIA,GAAS+J,OAAOC,KAAKgM,GAAWpU,OAAS,EAClC,4BACP,wBAAI5C,UAAWmX,aAAKrX,EAAQ6W,GAAI7W,EAAQgX,MAAOtQ,GAC/C,wBAAIxG,UAAWF,EAAQgX,KAAME,EAAUxQ,KAGpC,4BACH,wBAAIxG,UAAWF,EAAQ6W,IAAKnQ,GAC5B,4BAAKwQ,EAAUxQ,SAI3B,kBAACrG,EAAA,EAAD,CAAYiF,QAAQ,KAAKpF,UAAWF,EAAQ2U,SAA5C,+CACgD,uBAAGkB,KAAK,iDAAR,iBADhD,sEC7HF1X,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFE,MAAO,QACPC,OAAQ,QACRqK,SAAU,SACVhK,gBAAiBT,EAAMU,QAAQC,QAAQsY,UA4BhCzX,I,6IAAAA,eAAO,IAAPA,CAAYC,aAvB3B,YAAqB,IAANC,EAAK,EAALA,EACLC,EAAU7B,KAGhB,OAFA+Q,QAAQC,IAAIpP,EAAEU,QAEP,yBAAKP,UAAWF,EAAQ1B,MAC3B,kBAACiZ,EAAA,EAAD,MACA,kBAAC,EAAD,MACa,QAAZxX,EAAEU,OACC,kBAAC,IAAMsE,SAAP,KACI,kBAACuR,GAAD,MACA,kBAAC,GAAD,OAEJ,kBAAC,IAAMvR,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Y,gECyBDyS,I,GA1DVC,KAAWC,Q,cARZ,WAAYpZ,GAAO,0BAOnBqZ,UAAY,UAPM,sFAiDlB9C,YAAc,EAAE,GAAI,EAAG,IAjDL,iFACd+C,KAAKtZ,KAAOA,E,mFA4CZ,OAAOuZ,aAAeD,KAAKE,iB,6HArCG,CAC9BjZ,QAAS,GACTE,QAAS,CACLC,QAAS,CAACsY,KAAM,WAChB5X,UAAW,CAAC4X,KAAM,YAEtBS,UAAW,CACPC,eAAgB,CACZ,UAAW,CACP,uBAAwB,CACpBxZ,MAAO,IAEX,6BAA8B,CAC1BW,QAAS,QAEb,8BAA+B,CAC3BA,QAAS,QAEb,6BAA8B,CAC1BL,gBAAiB6G,YAAKiS,KAAKD,UAAW,IACtClS,aAAc,IAElB,mCAAoC,CAChC3G,gBAAiBmZ,YAAQL,KAAKD,UAAW,KAE7C,mCAAoC,CAChC7Y,gBAAiB8Y,KAAKD,WAE1B,oCAAqC,CACjC7Y,gBAAiBoZ,YAAON,KAAKD,UAAW,Y,mCAO3DQ,M,+GAIAV,M,yEAAwB,K,2CAExBW,M,oFAAoB,SAACrK,EAAKE,EAAKK,GAC5B,EAAKiH,YAAa,EACd,EAAKV,YAAY,KAAO9G,GAAO,EAAK8G,YAAY,KAAO5G,IACvD,EAAK4G,YAAc,CAAC9G,EAAKE,EAAKK,GAC9B,EAAKhQ,KAAKyB,EAAEsY,aAAa,MACzB,EAAK/Z,KAAKyB,EAAEsY,aAAa,EAAK/Z,KAAKga,MAAMC,QAAQxK,EAAKE,S,4CAM7DmK,M,oFAAqB,WAClB,EAAK7C,YAAa,M,aCkVXiD,I,GAvYVf,KAAWC,Q,GAgCXD,KAAWC,Q,GACXD,KAAWC,Q,GACXD,KAAWC,Q,GACXD,KAAWC,Q,GACXD,KAAWC,Q,GAoBXD,KAAWC,Q,GACXD,KAAWC,Q,GACXD,KAAWC,Q,GACXD,KAAWC,Q,GAgCXD,KAAWC,Q,GAgCXD,KAAWC,Q,GAiCXD,KAAWC,Q,GAuNXD,KAAWC,Q,cA5XZ,WAAYpZ,GAAO,IAAD,+GAalBma,WAAa,WACT,EAAKC,aAAa,EAAKpa,KAAKga,MAAMK,wBAAwB,KAC1D,EAAKC,kBAfS,KAiBlB9K,aAAe,SAAAC,GAAQ,IAAD,iBACE,EAAKxD,QADP,IAClB,gCAAWF,EAAX,QACI,GAAIA,EAAM0D,MAAQA,EAAK,OAAO1D,GAFhB,8BAGlB,MAAO,IApBO,iPA8ClBwO,UAAY,GA9CM,KA+ClBD,eAAiB,WAA2B,IAA1BE,EAAyB,uDAAT,KACxBvO,EAASuO,GAAiB,EAAKvO,OAE/BwO,EAAiB,IAAI5I,IACrB6I,EAAa,IAAI7I,IACjB8I,EAAW,IAAI9I,IACrB5F,EAAOY,SAAQ,SAAAV,GACXsO,EAAe3I,IAAI3F,EAAEyO,YACrB,EAAKC,UAAU1O,EAAEsD,KAAOtD,EAAEyO,WAFV,qBAGEzO,EAAE2L,SAHJ,IAGhB,gCAAWgD,EAAX,QAA6BJ,EAAW5I,IAAIgJ,IAH5B,8BAIhBH,EAAS7I,IAAI3F,EAAE/C,MACf,EAAKmR,UAAUpO,EAAEsD,KAAOtD,EAAE/C,QAE9B,EAAKqR,eAAL,aAA0BA,GAC1B,EAAKC,WAAa,aAAIA,GAAYjK,OAClC,EAAKkK,SAAW,aAAIA,GAAUlK,QA9DhB,iQAqGlBsK,WAAa,WACT,IACMC,EADS,EAAK/O,OACA/G,KAAI,SAAAiH,GAAC,OAAIA,EAAEsD,OAC/B,EAAKwL,OAAS,EAAKjb,KAAKga,MAAMkB,UAAUF,GACxC,EAAKG,oBACL,EAAKC,eA1GS,oDA8HlB5E,aAAe,SAAC/G,EAAKE,GAAS,IAAD,iBACL,EAAKsL,QADA,IACzB,gCAAWI,EAAX,QACI,GAAIA,EAAM5L,MAAQA,GAAO4L,EAAM1L,MAAQA,EAAK,OAAO0L,GAF9B,8BAGzB,MAAO,IAjIO,mWAsRlB3N,cAAgB,WACZ,EAAKqG,aAAc,EACnB,EAAKC,YAAc,IAxRL,sHACdsF,KAAKtZ,KAAOA,E,oDAIZsZ,KAAKa,aACLb,KAAKyB,e,oCAyXL,IAAMO,EAAkB,GACxBhC,KAAKxK,aAAajC,SAAQ,SAAAqB,GACtBvB,OAAOC,KAAKsB,EAAIqN,aAAa1O,SAAQ,SAAAiH,GAC7BwH,EAAgBvE,eAAejD,GAAOwH,EAAgBxH,IAAS5F,EAAIqN,YAAYzH,GAC9EwH,EAAgBxH,GAAQ5F,EAAIqN,YAAYzH,SAGrDwF,KAAK3F,YAAchH,OAAOC,KAAK0O,GAAiBpW,KAAI,SAAA4O,GAAI,MAAK,CACzDG,KAAMH,EACN7R,MAAOqZ,EAAgBxH,S,qCAjXC,IAAD,OAC3B,OAAOwF,KAAKrN,OAAO8B,QAAO,SAAA5B,GACtB,GAAI,EAAKqP,kBAAkBhX,OAAS,IAAM,EAAKgX,kBAAkBnO,SAASlB,EAAEyO,YAAa,OAAO,EAChG,GAAI,EAAKa,YAAYjX,OAAS,IAAM2H,EAAE/C,KAAO,EAAKqS,YAAY,IAAMtP,EAAE/C,KAAO,EAAKqS,YAAY,IAAK,OAAO,EAC1G,GAAI,EAAKC,cAAclX,OAAS,EAAG,CAC/B,IAD+B,EAC3BmX,GAAO,EADoB,eAEZxP,EAAE2L,SAFU,IAE/B,gCAAS8D,EAAT,QACI,GAAI,EAAKF,cAAcrO,SAASuO,GAAS,CACrCD,GAAO,EACP,QALuB,8BAO/B,IAAKA,EAAM,OAAO,EAEtB,OAAO,O,2BA0KO,IAAD,OACjB,GAA6B,IAAzBrC,KAAKqB,SAASnW,OAAc,MAAO,GACvC,IAAMqX,EAAUvC,KAAKqB,SAAS,GACxBmB,EAAUxC,KAAKqB,SAASrB,KAAKqB,SAASnW,OAAS,GACrD,OAAO,aAAI,IAAIuM,MAAM+K,EAAUD,EAAU,IAAI3W,KAAI,SAAC8I,EAAGC,GACjD,IAAM7E,EAAOyS,EAAU5N,EACvB,OAAK,EAAK8N,UAAU3S,GAKb,CACHA,OACAU,QAAS,EAAKiS,UAAU3S,GAAMU,QAC9BC,KAAM,EAAKgS,UAAU3S,GAAMW,MARG,CAC9BX,OACAW,KAAM,EACND,QAAS,Q,mCA6BS,IAAD,OACnBkR,EAAO1B,KAAKpN,eAAehH,KAAI,SAAAiH,GAAC,OAAIA,EAAEsD,OAE5C,OAAO6J,KAAK2B,OACPlN,QAAO,SAAAG,GACJ,IAAK8M,EAAK3N,SAASa,EAAIuB,KAAM,OAAO,EACpC,GAAI,EAAKsE,kBACoCjG,GAArCI,EAAIqN,YAAY,EAAKvH,aACrB,OAAO,EACf,GAAI,EAAKgI,cAAcxX,OAAS,EAAG,CAC/B,IAD+B,EAC3ByX,GAAa,EADc,eAET,EAAKD,eAFI,IAE/B,2BAA0C,CAAC,IAAhCjU,EAA+B,QAEtC,QAAgC+F,GAA5BI,EAAIqN,YAAYxT,GAAuB,CACvCkU,GAAa,EACb,QANuB,8BAS/B,IAAKA,EAAY,OAAO,EAE5B,IAhBW,iBAiBO,EAAKxO,kBAjBZ,IAiBX,gCAAWyD,EAAX,QACI,IAAKhD,EAAIsC,WAAWnD,SAAS6D,GACzB,OAAO,GAnBJ,8BAqBX,OALiB,O,6BAmBL,IAAD,OACfZ,EAAM,KAAMC,EAAM,EAChBC,EAAa,IAAIqB,IACjBF,EAAS,GAEf2H,KAAKxK,aAAajC,SAAQ,SAAAqB,GACtB,IAAM9E,EAAO,EAAKmR,UAAUrM,EAAIuB,KAChCa,EAAMrB,KAAKqB,IAAIA,EAAKlH,GACpBmH,EAAMtB,KAAKsB,IAAIA,EAAKnH,GAIpB8E,EAAIsC,WAAW3D,SAAQ,SAAAqE,GACnB,IAAI9I,EAAM,KACN,EAAKgI,YACLI,EAAWsB,IAAIvF,GAAkB2E,IACjC9I,EAAG,UAAMgB,EAAN,YAAcmD,GAAkB2E,MAGnCV,EAAWsB,IAAIZ,GACf9I,EAAG,UAAMgB,EAAN,YAAc8H,IAEhBS,EAAOoF,eAAe3O,GACrBuJ,EAAOvJ,SAA0C0F,IAAlCI,EAAIgO,uBAAuBhL,GAAiB,EAAEhD,EAAIgO,uBAAuBhL,GAD7DS,EAAOvJ,QAAyC0F,IAAlCI,EAAIgO,uBAAuBhL,GAAiB,EAAEhD,EAAIgO,uBAAuBhL,SAKhI,IAAK,IAAIjD,EAAIqC,EAAKrC,GAAKsC,EAAKtC,IACxB,2BAAsBuC,GAAtB,gBAAK,IAAMU,EAAG,KACLvE,OAAOC,KAAK+E,GAAQtE,SAApB,UAAgCY,EAAhC,YAAqCiD,MACtCS,EAAO,GAAD,OAAI1D,EAAJ,YAASiD,IAAS,GAEpC,MAAO,CACHZ,MACAC,MACAC,WAAW,aAAKA,GAChBmB,OAAQhF,OAAOC,KAAK+E,GAAQzM,KAAI,SAAAkD,GAAQ,IAAD,EACdA,EAAI+T,MAAM,KADI,mBAC5B/S,EAD4B,KACtBN,EADsB,KAGnC,MAAO,CAACM,EADMuI,EAAOvJ,GACAU,S,gCAKN,IAAD,OAClBwH,EAAM,KAAMC,EAAM,EAChBC,EAAa,IAAIqB,IACjBxJ,EAAO,GACPgI,EAAY,GAElBiJ,KAAKxK,aAAajC,SAAQ,SAAAqB,GACtB,IAAM9E,EAAO,EAAKmR,UAAUrM,EAAIuB,KAChCa,EAAMrB,KAAKqB,IAAIA,EAAKlH,GACpBmH,EAAMtB,KAAKsB,IAAIA,EAAKnH,GAEpB8E,EAAIsC,WAAW3D,SAAQ,SAAAqE,GACnB,IAAI9I,EAAM,KACN,EAAKgI,YACLI,EAAWsB,IAAIvF,GAAkB2E,IACjC9I,EAAG,UAAMgB,EAAN,YAAcmD,GAAkB2E,MAGnCV,EAAWsB,IAAIZ,GACf9I,EAAG,UAAMgB,EAAN,YAAc8H,IAEhB7I,EAAK0O,eAAe3O,GACpBC,EAAKD,SAA0C0F,IAAlCI,EAAIgO,uBAAuBhL,GAAiB,EAAEhD,EAAIgO,uBAAuBhL,GAD5D7I,EAAKD,QAAyC0F,IAAlCI,EAAIgO,uBAAuBhL,GAAiB,EAAEhD,EAAIgO,uBAAuBhL,SAK5H,2BAAsBV,GAAtB,eAAmC,CAG/B,IAHC,IAAMU,EAAG,KAEJkL,EAAa,GACVnO,EAAIqC,EAAKrC,GAAKsC,EAAKtC,IACnBtB,OAAOC,KAAKvE,GAAMgF,SAAlB,UAA8BY,EAA9B,YAAmCiD,IAEnCkL,EAAW9O,KAAKjF,EAAK,GAAD,OAAI4F,EAAJ,YAASiD,KAD9BkL,EAAW9O,KAAK,GAGxB+C,EAAU/C,KAAK,CACX1D,KAAMsH,EACNpI,KAAM,MACNe,MAAO,QACPsI,SAAU,CACNkK,MAAO,UAEX/Y,KAAM8Y,IAId,MAAO,CACH9L,MACAC,MACAC,WAAW,aAAKA,GAChBnI,KAAMgI,O,wHA/We,M,6CAC5ByJ,M,oFAAsB,SAAA7N,GACnB,EAAKA,OAASA,M,4CAYjB4N,M,oHAiBAV,M,wEAAoB,U,2HACgB,M,uHACJ,M,qHACF,M,sHACC,M,sHACA,M,8HAoBQ,M,0HACJ,M,wHACF,M,0HACE,M,6CACnCW,M,oFAAsB,SAAC1R,EAAKnG,GAGzB,GAFA,EAAKyL,gBAEO,WAARtF,EAAkB,CAClB,IAAMkU,EAAM,EAAKtc,KAAKga,MAAMK,wBAAwB,CAChDnT,OAAQjF,IAEZ,EAAKmY,aAAakC,GAClB,EAAKvB,iBAQO,SAAP3S,GACL,EAAK,SAAD,OAAUA,IAASnG,EACvB,EAAKmZ,gBAID,EAAK,SAAD,OAAUhT,IADP,WAAPA,EACuB,EAAKpI,KAAKga,MAAMuC,gBAAgBta,GAEhCA,EAC3B,EAAKkZ,oBACA,EAAKpH,aACN,EAAKqH,mB,mHAIY,M,kDAS5BtB,M,oFAA2B,WACxB,IAAMiC,EAAY,GAClB,EAAK7P,eAAeW,SAAQ,SAAAV,GACnB4P,EAAU5P,EAAE/C,QACb2S,EAAU5P,EAAE/C,MAAQ,CAChBU,QAAS,EACTC,KAAM,IAEdgS,EAAU5P,EAAE/C,MAAM,EAAKyR,UAAU1O,EAAEsD,OAAS,KAOhD,EAAKsM,UAAYS,KAAKC,MAAMD,KAAKE,UAAUX,Q,0HAQX,CAChC,aACA,cACA,OACA,UACA,UACA,QACA,MACA,YACA,iBACA,SACA,eACA,QACA,kBACA,sBACA,WACA,YACA,cACA,aACA,YACA,eACA,aACA,0BACA,qBACA,cACA,iBACA,6BACA,gBACA,eACA,aACA,YACA,Y,6HAEmC,M,uDAkCtCjC,M,oFAAgC,SAAA6C,GAC7B,EAAKlP,iBAAmBkP,EACxB,EAAKvB,kB,4CAIRjC,M,yEAAyB,K,kCACzBU,M,6GAsCAA,M,sHA6BAV,M,yEAAwB,K,iDACxBA,M,yEAA8B,K,4CAC9BA,M,yEAAyB,K,4CACzBA,M,wEAAyB,M,oCAOzBU,M,4GA4CAA,M,gMAqDiC,M,yCAEjCC,M,gHAcAX,M,yEAAmB,Q,6CACnBW,M,oFAAsB,SAAAzF,GAAK,OAAI,EAAKA,MAAQA,M,wBC7Y7CuI,GAAUC,EAAQ,KAClBC,GAAY,IAAIF,GAAQG,cAEtB/M,GAAM,SAAAgN,GAAG,MAAI,8DAA8D,GAA9D,OAAiEA,EAAjE,cAgHJC,G,kDA1GX/B,UAAY,WAAgB,IAAfF,EAAc,uDAAP,GACVC,EAAS,GACfD,EAAKnO,SAAQ,SAAA4C,QACa3B,GAAlBoP,GAAUzN,IACVyN,GAAUzN,GAAK5C,SAAQ,SAAAqB,GAGnB,IAH0B,EAGtB0M,OAAa9M,EAHS,eAINqP,IAJM,IAI1B,2BAA8B,CAAC,IAApBpR,EAAmB,QACtBA,EAAM0D,KAAOA,IACbmL,EAAa7O,EAAM6O,aAND,8BAS1BK,EAAO3N,KAAP,aACIsN,WAAYA,EACZnL,IAAKA,EACLO,IAAKA,GAAI,IAAD,OAAKP,EAAL,YAAYvB,EAAIyB,IAAhB,UACLzB,UAKnB,IAAIkP,EAAWnC,EACd/V,KAAI,SAACjD,GAAD,MAAY,CAAEA,QAAOwO,KAAMxB,KAAKoO,aACpC5M,MAAK,SAACrL,EAAGC,GAAJ,OAAUD,EAAEqL,KAAOpL,EAAEoL,QAC1BvL,KAAI,qBAAGjD,SACR,OAAOmb,G,KAGXnD,QAAU,SAACxK,EAAKE,GAGZ,IAAM2N,EAAiB,GAgBvB,OAfAJ,GAAUzN,GAAK5C,SAAQ,SAAAqB,GACfA,EAAIyB,MAAQA,GACZhD,OAAOC,KAAKsB,EAAIqP,oBAAoB1Q,SAAQ,SAAAuH,GACxClG,EAAIqP,mBAAmBnJ,GAASvH,SAAQ,SAACoI,EAAKc,GAC1CuH,EAAehQ,KAAK,CAChB8G,QAASA,EACTa,IAAKA,EACLc,IAAKA,EAAM,EACXpB,WAAY,qBAOzB2I,G,KAGXE,MAAQ,SAACC,EAAKC,GACVF,MAAMC,GACHE,MAAK,SAAArB,GAAG,OAAIA,EAAIsB,UAChBD,MAAK,SAAArB,GACEoB,aAAcG,UAAUH,EAAGpB,MAElCwB,OAAM,SAAA3X,GAAC,OAAIyK,QAAQmN,MAAM5X,O,KAGhCkU,wBAA0B,SAACvT,GACvB,GAAmC,IAA/B6F,OAAOC,KAAK9F,GAAQtC,QAA4D,GAA5CsY,GAAUkB,SAASlX,EAAOI,QAAQ1C,OAAY,CAClF,IAAMwW,EAAO,GAIb,OAHAmC,GAAUtQ,SAAQ,SAAAoR,GACdjD,EAAK1N,KAAK2Q,MAEPjD,EAGX,IAAMA,EAAO,GAmBb,MAlBA,CAAC,SAAU,aAAc,OAAQ,WAAWnO,SAAQ,SAAAzE,GAChD,QAAmB0F,GAAfhH,EAAOsB,IAA6B,WAARA,EAAiB,CAC7C,IAAM8V,EAAW,GACjBpB,GAAUkB,SAASlX,EAAOI,QAAQ2F,SAAQ,SAAAiH,GACtCoK,EAAS5Q,KAAKsP,GAAQuB,cAAcC,KAAKtK,OAE7CqJ,GAAUtQ,SAAQ,SAAAoR,GAGd,IAFA,IAAMI,EAAe,EAAK9B,gBAAgB0B,EAAShd,OAE1CgN,EAAI,EAAGA,EAAIiQ,EAAS1Z,OAAQyJ,IACjC,IAA0C,GAAtCoQ,EAAanc,QAAQgc,EAASjQ,IAAU,CACxC+M,EAAK1N,KAAK2Q,GACV,cAMbjD,G,KAGXsD,mBAAqB,SAAC7O,GAClB,OAAO0N,GAAU1N,GAAKmL,Y,KAG1B2B,gBAAkB,SAACtI,GACf,IAAMoK,EAAe,GAMrB,OALoBpK,EAAKsK,cAAcpC,MAAM,KAC/BtP,SAAQ,SAAAiH,GACN,IAARA,GACAuK,EAAa/Q,KAAKsP,GAAQuB,cAAcC,KAAKtK,OAE9CuK,ICjGAG,GAFD,IANV,aAAe,0BAJf7P,IAAM,IAAIuK,GAAaI,MAIT,KAHd7X,EAAI,IAAIyY,GAAKZ,MAGC,KAFdU,MAAQ,IAAIiD,GAGR3D,KAAK3K,IAAI8P,OACTnF,KAAK7X,EAAEgd,Q,WCHfC,IAASC,OAAO,kBAAC,IAAD,CAAUC,UAAWJ,GAAMI,UAAWjQ,IAAK6P,GAAM7P,IAAKlN,EAAG+c,GAAM/c,GAC3E,kBAAC,KAAD,CAAkB1B,MAAOye,GAAM7P,IAAI5O,OAC/B,kBAAC,GAAD,QAEK8e,SAASC,cAAc,W,w051VCbpCC,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.a1e9e500.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from \"@material-ui/core/Typography\";\nimport logo from './logo.svg';\nimport {inject, observer} from \"mobx-react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'absolute',\n        width: '20vw',\n        height: '9vh',\n        left: 0,\n        top: 0,\n        borderBottomRightRadius: theme.spacing(0.5),\n        backgroundColor: theme.palette.primary.dark,\n\n    },\n    titleGroup: {\n        width: '100%',\n        height: '4vh',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    logo: {\n        margin: theme.spacing(2, 5),\n        height: '3vh',\n    },\n    title: {\n        fontSize: '2vh',\n        color: theme.palette.secondary.contrastText,\n    },\n    tabGroup: {\n        width: '100%',\n        height: '4vh',\n    },\n}));\n\nfunction AppBar({d}) {\n    const classes = useStyles();\n\n    const routers = ['home','explorer']\n\n    const handleChange = (event, newValue) => {\n        d.router = routers[newValue];\n    };\n\n    return <div className={classes.root}>\n        <div className={classes.titleGroup}>\n        <img className={classes.logo}\n             alt={'logo'} src={logo}/>\n        <Typography className={classes.title}>VisImages</Typography>\n        </div>\n        <Tabs\n            className={classes.tabGroup}\n            value={routers.indexOf(d.router)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            centered\n        >\n            <Tab label=\"home\" index={0}/>\n            <Tab label=\"explorer\" index={1}/>\n        </Tabs>\n    </div>\n}\n\nexport default inject('d')(observer(AppBar));\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { VariableSizeList } from 'react-window';\nimport {makeStyles, Checkbox, TextField} from \"@material-ui/core\";\nimport {CheckBoxOutlineBlank, CheckBox} from '@material-ui/icons';\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {inject, observer} from \"mobx-react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1, 1, 1),\n        flex: '0 0 fit-content'\n    },\n    autocomplete: {\n        marginTop: theme.spacing(1),\n    }\n}));\n\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\"/>;\nconst checkedIcon = <CheckBox fontSize=\"small\"/>;\n\nconst LISTBOX_PADDING = 8; // px\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  return React.cloneElement(data[index], {\n    style: {\n      ...style,\n      top: style.top + LISTBOX_PADDING,\n    },\n  });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n  const { children, ...other } = props;\n  const itemData = React.Children.toArray(children);\n  const itemCount = itemData.length;\n  const itemSize = 36;\n\n  const getChildSize = (child) => {\n    return itemSize;\n  };\n\n  const getHeight = () => {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n    return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n  };\n\n  const gridRef = useResetCache(itemCount);\n\n  return (\n    <div ref={ref}>\n      <OuterElementContext.Provider value={other}>\n        <VariableSizeList\n          itemData={itemData}\n          height={getHeight() + 2 * LISTBOX_PADDING}\n          width=\"100%\"\n          ref={gridRef}\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={(index) => getChildSize(itemData[index])}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </VariableSizeList>\n      </OuterElementContext.Provider>\n    </div>\n  );\n});\n\nListboxComponent.propTypes = {\n  children: PropTypes.node,\n};\n\nfunction Filters({title, value, d}) {\n    const classes = useStyles();\n    const [val, setVal] = useState('');\n\n    const allFilters = d[`all${value}`];\n\n\n    return <div className={classes.root}>\n        <Autocomplete\n          disabled={d.barSelected} \n          className={classes.autocomplete}\n          multiple\n          size={'small'}\n          options={allFilters}\n          // filterOptions={options => options\n          //   .filter(option => option.toLowerCase().includes(val.toLowerCase()))\n          //   .filter((_, i) => i < 20)}\n          onChange={(e, newValue) => {\n              d.updateFilter(value, newValue)\n          }}\n          ListboxComponent={ListboxComponent}\n          disableCloseOnSelect\n          renderOption={(option, {selected}) => (\n            <React.Fragment>\n                <Checkbox\n                  icon={icon}\n                  checkedIcon={checkedIcon}\n                  style={{marginRight: 8}}\n                  checked={selected}\n                />\n                {option}\n            </React.Fragment>\n          )}\n          renderInput={(params) => (\n            <TextField {...params} variant=\"outlined\" label={title} onChange={(e) => setVal(e.target.value)}/>\n          )}\n        />\n    </div>\n}\n\nexport default inject('d')(observer(Filters));\n","import React from 'react';\nimport {makeStyles, InputBase, fade} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport {inject, observer} from \"mobx-react\";\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n        position: 'relative',\n        flex: '0 0 fit-content',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        margin: theme.spacing(1),\n        width: '100%',\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2, 0, 0),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: `calc(100% - ${theme.spacing(2)}px)`,\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\n        width: '100%',\n    },\n}));\n\nfunction Search({d, keyword = 'title'}) {\n    const classes = useStyles();\n\n    return <div className={classes.search}>\n        <div className={classes.searchIcon}>\n            <SearchIcon/>\n        </div>\n        <InputBase\n          placeholder= {`Search ${keyword}...`}\n          disabled={d.barSelected||keyword!='title'} \n          classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n          }}\n          onKeyPress={e => {\n              if (e.key === 'Enter') {\n                d.updateFilter('search', e.target.value);\n            }\n          }}\n        />\n    </div>\n}\n\nexport default inject('d')(observer(Search));\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport {inject, observer} from \"mobx-react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flex: '0 0 300px',\n        padding: theme.spacing(1),\n    },\n}));\n\nfunction BarCharts({d}) {\n    const classes = useStyles();\n    const bars = d.bars;\n\n    const getOption = () => {\n        return {\n            animation: false,\n            brush: {\n                xAxisIndex: 'all',\n                brushLink: 'all',\n                outOfBrush: {\n                    colorAlpha: 0.1\n                }\n            },\n            toolbox: {\n                feature: {\n                    brush: {\n                        type: ['lineX', 'clear'],\n                        title: {\n                            lineX: 'Select Years',\n                            clear: 'Clear Selection',\n                        }\n                    }\n                }\n            },\n            legend: {\n                data: ['VAST', 'InfoVis'],\n                left: 10,\n            },\n            color: ['#e94b4a', '#1f5886'],\n            xAxis: [\n                {\n                    type: 'category',\n                    data: bars.map(bar => bar.year),\n                    axisLabel: {\n                        fontSize: 14,\n                    },\n                }\n            ],\n            yAxis: [\n                {\n                    type: 'value',\n                    axisLabel: {\n                        fontSize: 14,\n                    },\n                }\n            ],\n            tooltip: {},\n            grid: [\n                {\n                    left: 50,\n                    bottom: 30,\n                }\n            ],\n            textStyle: {\n                fontSize: 16,\n            },\n            series: [\n                {\n                    name: 'InfoVis',\n                    type: 'bar',\n                    stack: 'stat',\n                    data: bars.map(bar => bar.InfoVis),\n                },\n                {\n                    name: 'VAST',\n                    type: 'bar',\n                    stack: 'stat',\n                    data: bars.map(bar => bar.VAST),\n                },\n            ]\n        }\n    };\n\n    return <div className={classes.root}>\n        <ReactEcharts option={getOption()}\n                      onEvents={{\n                          brushEnd: ({areas}) => {\n                              const brushRange = areas[0].coordRange;\n                              const yearRange = brushRange.map(val => val + bars[0].year);\n                              d.updateFilter('Years', yearRange);\n                              d.barSelected = true;\n                          },\n                          brushselected: ({batch}) => {\n                              const {areas} = batch[0];\n                              if (areas.length !== 0) return;\n                              d.updateFilter('Years', []);\n                              d.barSelected = false;\n                          }\n                      }}/>\n    </div>\n}\n\nexport default inject('d')(observer(BarCharts));\n","import React from 'react';\nimport {makeStyles, useTheme} from \"@material-ui/core\";\nimport {inject, observer} from \"mobx-react\";\nimport {AutoSizer, List, CellMeasurer, CellMeasurerCache} from \"react-virtualized\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n    },\n}));\n\nconst cache = new CellMeasurerCache({defaultHeight: 100, fixedWidth: true});\n\nfunction CellRenderer({index, key, parent, style, list}) {\n    return <CellMeasurer key={key} rowIndex={index} columnIndex={0} cache={cache} parent={parent}>\n        {({measure, registerChild}) => <div ref={registerChild} style={style}>\n            {list[index](measure)}\n        </div>}\n    </CellMeasurer>\n}\n\n\nfunction VirtualList({children}) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return <div className={classes.root}>\n        <AutoSizer>\n            {({height, width}) => (\n              <List\n                height={height}\n                rowCount={children.length}\n                rowHeight={cache.rowHeight}\n                deferredMeasurementCache={cache}\n                rowRenderer={({index, key, parent, style}) => CellRenderer({index, key, parent, style, list: children})}\n                width={width}\n                style={{\n                    paddingRight: theme.spacing(0),\n                    transform: `translateX(${theme.spacing(0)}px)`,\n                    outline: 'none',\n                }}\n              />\n            )}\n        </AutoSizer>\n    </div>\n}\n\nexport default inject()(observer(VirtualList));\n","import React, {useEffect} from 'react';\nimport {makeStyles, Typography} from \"@material-ui/core\";\nimport {inject, observer} from \"mobx-react\";\nimport VirtualList from \"./VirtualList\";\n\nconst useStyles = makeStyles(theme => ({\n    cnt: {\n        margin: theme.spacing(1),\n        flex: '0 0 fit-content',\n    },\n    list: {\n        margin: theme.spacing(0, 1, 1, 1),\n        flex: 1,\n        overflow: 'hidden',\n    },\n    paperItem: {\n        margin: theme.spacing(1, 0)\n    }\n}));\n\nfunction PaperItem({paper, onLoad}) {\n    useEffect(() => {\n        onLoad();\n    }, [paper.title, onLoad]);\n\n    return <li>{paper.title}</li>\n}\n\nfunction AllPapers({d}) {\n    const classes = useStyles();\n    const papers = d.filteredPapers;\n\n    return <React.Fragment>\n        <Typography className={classes.cnt}>{papers.length} paper{papers.length !== 1 && 's'} found.</Typography>\n        <div className={classes.list}>\n            <VirtualList>\n                {papers.map(p => measure => <PaperItem paper={p} onLoad={measure}/>)}\n            </VirtualList>\n        </div>\n    </React.Fragment>\n}\n\nexport default inject('d')(observer(AllPapers));\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport {observer} from \"mobx-react\";\nimport Filters from \"./Filters\";\nimport Search from \"./Search\";\nimport BarCharts from \"./BarCharts\";\nimport AllPapers from \"./AllPapers\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'absolute',\n        left: 0,\n        width: `20vw`,\n        top: `calc(9vh + ${theme.spacing(1)}px)`,\n        bottom: theme.spacing(1),\n        borderRadius: `0 ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0`,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nfunction ControlPanel() {\n    const classes = useStyles();\n\n    return <div className={classes.root}>\n        <Search/>\n        <BarCharts/>\n        <Filters title={'Conference'} value={'Conferences'}/>\n        <Filters title={'Authors'} value={'Authors'}/>\n        <AllPapers/>\n    </div>\n}\n\nexport default observer(ControlPanel);\n","const ColorStyles = {\n    'NoVis': '#d3d3d3',\n    'tree': '#e8c7c7',\n    'graph': '#d8a3a3',\n    'treemap': '#c87e7e',\n    'hierarchical_edge_bundling': '#b85a5a',\n    'sunburst_icicle': '#a93636',\n    'line_chart': '#d8bea3',\n    'parallel_coordinate': '#c8a47e',\n    'polar_plot': '#b88a5a',\n    'storyline': '#a97036',\n    'flow_diagram': '#c8c87e',\n    'chord_diagram': '#b8b85a',\n    'sankey_diagram': '#a9a936',\n    'map': '#70a936',\n    'heatmap': '#7ec87e',\n    'unit_visualization': '#5ab85a',\n    'glyph_based': '#36a936',\n    'scatterplot': '#36a970',\n    'matrix': '#7ec8c8',\n    'table': '#5ab8b8',\n    'small_multiple': '#36a9a9',\n    'pie_chart': '#7ea4c8',\n    'sector_chart': '#5a8ab8',\n    'donut_chart': '#3670a9',\n    'error_bar': '#7e7ec8',\n    'box_plot': '#5a5ab8',\n    'stripe_graph': '#3636a9',\n    'bar_chart': '#7036a9',\n    'area_chart': '#b85ab8',\n    'proportional_area_chart': '#a936a9',\n    'word_cloud': '#a93670',\n}\n\nconst GroupedCategories = {\n    'tree': 'Tree/Network',\n    'graph': 'Tree/Network',\n    'treemap': 'Tree/Network',\n    'hierarchical_edge_bundling': 'Tree/Network',\n    'sunburst_icicle': 'Tree/Network',\n    'line_chart': 'Line',\n    'parallel_coordinate': 'Line',\n    'polar_plot': 'Line',\n    'storyline': 'Line',\n    'flow_diagram': 'Diagram',\n    'chord_diagram': 'Diagram',\n    'sankey_diagram': 'Diagram',\n    'map': 'Map',\n    'heatmap': 'Grid',\n    'unit_visualization': 'Grid',\n    'glyph_based': 'Grid',\n    'scatterplot': 'Point',\n    'matrix': 'Grid',\n    'table': 'Table',\n    'small_multiple': 'Grid',\n    'pie_chart': 'Circle',\n    'sector_chart': 'Circle',\n    'donut_chart': 'Circle',\n    'error_bar': 'Statistics',\n    'box_plot': 'Statistics',\n    'stripe_graph': 'Statistics',\n    'bar_chart': 'Bar',\n    'area_chart': 'Area',\n    'proportional_area_chart': 'Area',\n    'word_cloud': 'Text',\n    'NoVis': 'Others'\n}\n\nconst GroupedCategoriesColor = {\n    'Others': '#d3d3d3',\n    'Tree/Network': '#d8a3a3',\n    'Line': '#d8bea3',\n    'Diagram': '#c8c87e',\n    'Map': '#70a936',\n    'Grid': '#5ab85a',\n    'Point': '#36a970',\n    'Table': '#5ab8b8',\n    'Circle': '#7ea4c8',\n    'Statistics': '#7e7ec8',\n    'Bar': '#7036a9',\n    'Area': '#b85ab8',\n    'Text': '#a93670',\n}\n\n\nconst TextTranslate = {\n    'line_chart': 'line chart',\n    'scatterplot': 'scatterplot',\n    'tree': 'tree',\n    'heatmap': 'heatmap',\n    'treemap': 'treemap',\n    'graph': 'graph',\n    'map': 'map',\n    'bar_chart': 'bar chart',\n    'small_multiple': 'small multiple',\n    'matrix': 'matrix',\n    'flow_diagram': 'flow diagram',\n    'table': 'table',\n    'sunburst_icicle': 'sunburst icicle',\n    'parallel_coordinate': 'parallel coordinate',\n    'box_plot': 'box plot',\n    'error_bar': 'error bar',\n    'glyph_based': 'glyph based',\n    'area_chart': 'area chart',\n    'pie_chart': 'pie chart',\n    'sector_chart': 'sector chart',\n    'word_cloud': 'word cloud',\n    'proportional_area_chart':\n        'proportional area chart',\n    'unit_visualization': 'unit visualization',\n    'donut_chart': 'donut chart',\n    'sankey_diagram': 'sankey diagram',\n    'hierarchical_edge_bundling': 'hierarchical edge bundling',\n    'chord_diagram': 'chord diagram',\n    'stripe_graph': 'stripe graph',\n    'polar_plot': 'polar plot',\n    'storyline': 'storyline',\n    'NoVis': 'others'\n}\n\nconst ReverseTextTranslate = {};\nObject.keys(TextTranslate).forEach(key => ReverseTextTranslate[TextTranslate[key]] = key);\n\nexport { ColorStyles, TextTranslate, ReverseTextTranslate, GroupedCategories, GroupedCategoriesColor};\n","import React, {useState} from 'react';\nimport {\n    makeStyles,\n    Typography,\n    Checkbox,\n    TextField\n} from \"@material-ui/core\";\nimport {TextTranslate, ReverseTextTranslate} from \"../../store/Categories\";\nimport {inject, observer} from \"mobx-react\";\nimport {Autocomplete} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    selectAll: {\n        padding: 0,\n    },\n    title: {\n        margin: theme.spacing(0, 1),\n    },\n    autocomplete: {\n        minWidth: '300px',\n        maxWidth: '40vw',\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    }\n}));\n\nfunction VisCatFilters({d}) {\n    const classes = useStyles();\n    const [val, setVal] = useState('');\n\n    const allFilters = d.allCategories;\n    const filteredFilters = [];\n    let moreCnt = 0;\n    for (const optionalValue of allFilters) {\n        if (optionalValue.includes(val)) {\n            filteredFilters.push(optionalValue);\n            moreCnt += 1;\n        }\n        // if (moreCnt === 20) break;\n    }\n\n    return <div className={classes.root}>\n        {/* <Checkbox\n          className={classes.selectAll}\n          checked={d.filterCategories.length === d.allCategories.length}\n          indeterminate={d.filterCategories.length > 0 && d.filterCategories.length < d.allCategories.length}\n          onChange={(e, checked) => {\n              d.updateFilterCategories(checked ? d.allCategories : []);\n          }}/> */}\n        <Typography className={classes.title}>Vis. Categories: </Typography>\n        <Autocomplete\n          className={classes.autocomplete}\n          multiple\n          size={'small'}\n          limitTags={3}\n          options={filteredFilters.map(t => TextTranslate[t])}\n          value={d.filterCategories.map(t => TextTranslate[t])}\n          onChange={(e, newValue) => {\n              d.initClickWord();\n              d.updateFilterCategories(newValue.map(t => ReverseTextTranslate[t]))\n          }}\n          disableCloseOnSelect\n          renderOption={(option, {selected}) => (\n            <React.Fragment>\n                <Checkbox\n                  style={{marginRight: 8}}\n                  checked={selected}\n                />\n                {option}\n            </React.Fragment>\n          )}\n          renderInput={(params) => {\n              return <TextField {...params}\n              InputProps={\n                  {\n                      ...params.InputProps,\n                      startAdornment: params.InputProps.startAdornment === undefined?[]:params.InputProps.startAdornment.filter((_, i) => i < 3)\n                  }\n              }\n              onChange={(e) => setVal(e.target.value)}>\n                </TextField>\n          }}\n        />\n    </div>\n}\n\nexport default inject('d')(observer(VisCatFilters));\n","import React, {useEffect, useState} from 'react';\nimport {makeStyles, CircularProgress, Typography} from \"@material-ui/core\";\nimport {observer} from \"mobx-react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    img: {\n        width: '100%',\n    },\n}));\n\nfunction Image({src}) {\n    const classes = useStyles();\n\n    // const [state, setState] = useState('loading');\n\n    // const [imgSrc, setSrc] = useState(null);\n    // useEffect(() => {\n    //     const controller = new AbortController();\n    //     const {signal} = controller;\n    //     fetch(src, {signal})\n    //       .then(res => res.blob())\n    //       .then(img => {\n    //           setSrc(URL.createObjectURL(img));\n    //           setState('loaded');\n    //       })\n    //       .catch(e => {\n    //           if (e.toString() === \"AbortError: The user aborted a request.\") return;\n    //           setState('error');\n    //       });\n    //     return () => {\n    //         controller.abort();\n    //     }\n    // }, [src]);\n\n    return <div className={classes.root}>\n        <img className={classes.img} src={src} alt={src}/>\n        {/* {state === 'loading' && <CircularProgress/>}\n        {state === 'loaded' && }\n        {state === 'error' && <Typography className={classes.img}>Fail to load.</Typography>} */}\n    </div>\n}\n\nexport default observer(Image);\n","import React from 'react';\nimport {makeStyles, InputBase, fade} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport {inject, observer} from \"mobx-react\";\n\n\nconst useStyles = makeStyles(theme => ({\n    search: {\n        position: 'relative',\n        flex: '0 0 fit-content',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        margin: theme.spacing(1),\n        width: '100%',\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2, 0, 0),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: `calc(100% - ${theme.spacing(2)}px)`,\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(2)}px)`,\n        width: '100%',\n    },\n}));\n\nfunction Search({d}) {\n    const classes = useStyles();\n\n    return <div className={classes.search}>\n        <div className={classes.searchIcon}>\n            <SearchIcon/>\n        </div>\n        <InputBase\n          placeholder= {`Search caption...`}\n          classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n          }}\n          onKeyPress={e => {\n              if (e.key === 'Enter') {\n                d.updateFilter('Caption', e.target.value);\n            }\n          }}\n        />\n    </div>\n}\n\nexport default inject('d')(observer(Search));\n","import React, {useState} from 'react';\nimport {makeStyles, GridList, GridListTileBar, GridListTile, Typography} from \"@material-ui/core\";\nimport {inject, observer} from \"mobx-react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport VisCatFilters from \"./VisCatFilters\";\nimport Image from \"./Image\";\nimport Search from \"./Search\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'absolute',\n        padding: theme.spacing(1),\n        left: `calc(20vw + ${theme.spacing(1)}px)`,\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        height: `calc(50vh - ${theme.spacing(1.5)}px)`,\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        position: 'absolute',\n        top: '80px',\n        width: `calc(100% - ${theme.spacing(1)}px)`,\n        height: 'calc(100% - 80px)',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    titleBar: {\n        background:'rgba(0,0,0,0.7)',\n        // color:'transparent'\n        // background:\n        //   'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n        //   'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    actions: {\n        position: 'relative',\n        zIndex: 100,\n        height: '60px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%',\n        marginBottom: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n    },\n    filter: {\n        flex: '0 1 fit-content',\n    },\n    placeholder: {\n        flex: 1,\n    },\n    stat: {\n        display: 'flex',\n        flex: '0 0 fit-content',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    pagination: {\n        flex: '0 0 fit-content',\n    }\n}));\n\nfunction Gallery({sys, d}) {\n    const classes = useStyles();\n    const cntPerPage = 20;\n    const [page, setPage] = useState(1);\n\n    return <div className={classes.root}>\n        <div className={classes.actions}>\n            <VisCatFilters/>\n            {/* <div className={classes.placeholder}/> */}\n            <Search/>\n            <div className={classes.stat}>\n                <Typography>{d.showedImages.length} images found.</Typography>\n                <Pagination\n                  className={classes.pagination}\n                  page={page}\n                  count={Math.ceil(d.showedImages.length / cntPerPage)}\n                  onChange={(e, newPage) => setPage(newPage)}/>\n            </div>\n        </div>\n        <GridList cellHeight={200} spacing={10} className={classes.gridList} cols={5}>\n            {\n                d.showedImages\n                  .slice((page - 1) * cntPerPage, page * cntPerPage)\n                  .map(img => {\n                      const {title} = d.getPaperInfo(img.pid);\n                  return <GridListTile key={`${img.pid},${img.iid}`}\n                                            cols={1} rows={1}\n                                            style={{cursor: 'pointer'}}\n                                            onClick={() => sys.showDetail(img.pid, img.iid, img.url)}>\n                      <Image src={img.url}/>\n                      <GridListTileBar\n                        title={title}\n                        titlePosition=\"top\"\n                        actionPosition=\"left\"\n                        className={classes.titleBar}\n                      />\n                  </GridListTile>})\n            }\n        </GridList>\n    </div>\n}\n\nexport default inject('d', 'sys')(observer(Gallery));\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { inject, observer } from \"mobx-react\";\nimport { ColorStyles, TextTranslate, GroupedCategoriesColor, GroupedCategories } from \"../../store/Categories\";\nimport ReactEcharts from 'echarts-for-react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    height: '100%'\n  },\n}));\n\nfunction BarCharts({ d }) {\n  const classes = useStyles();\n  const allCategories = d.groupedCat ? Object.keys(GroupedCategoriesColor) : Object.keys(ColorStyles);\n  let { min, max, categories, bars } = d.barSeries;\n  categories = categories.sort((a, b) => allCategories.indexOf(a) - allCategories.indexOf(b));\n  bars = bars.sort((a, b) => {\n    const ai = categories.indexOf(a.name), bi = categories.indexOf(b.name);\n    if (ai !== bi) return ai - bi;\n    return 0;\n  })\n  // stream = stream.sort((a, b) => {\n  //     const ai = categories.indexOf(a[2]), bi = categories.indexOf(b[2]);\n  //     if (ai !== bi) return ai - bi;\n  //     return a[0] - b[0];\n  // })\n\n  // const calCat = new Set();\n  // stream.forEach(d => calCat.add(d[2]));\n  // console.log(stream);\n  console.log(bars);\n  let years = Array.from({ length: max - min + 1 }, (_, i) => i + min);\n  let selected = {}\n  const mappedGroupedCategories = d.filterCategories.map(cat => GroupedCategories[cat])\n  for (const cat of categories) {\n    if (d.showOnlySelected) {\n      if (d.groupedCat) {\n        if (mappedGroupedCategories.includes(cat))\n          selected[cat] = true\n        else selected[cat] = false\n      }\n      else {\n        if (d.filterCategories.includes(cat))\n          selected[cat] = true\n        else selected[cat] = false\n      }\n    }\n    else selected[cat] = true\n  }\n\n\n  const getOption = () => {\n    return {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      legend: {\n        formatter: name => d.groupedCat ? name : TextTranslate[name],\n        data: categories,\n        x: 'center',\n        y: 'bottom',\n        selected: selected,\n      },\n      color: categories.map(cat => d.groupedCat ? GroupedCategoriesColor[cat] : ColorStyles[cat]),\n\n      grid: {\n        top: '3%',\n        left: '3%',\n        right: '4%',\n        bottom: d.groupedCat ? '14%' : '28%',\n        containLabel: true\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: years,\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value'\n        }\n      ],\n      series: bars\n    };\n  }\n\n  return <div className={classes.root}>\n    <ReactEcharts style={{\n      width: '100%',\n      height: '100%',\n    }} notMerge option={getOption()} />\n  </div>\n}\n\nexport default inject('d')(observer(BarCharts));\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { inject, observer } from \"mobx-react\";\nimport { ColorStyles, TextTranslate,GroupedCategories, GroupedCategoriesColor } from \"../../store/Categories\";\nimport ReactEcharts from 'echarts-for-react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    height: '100%'\n  },\n}));\n\nfunction Stream({ d }) {\n  const classes = useStyles();\n  const allCategories = d.groupedCat?Object.keys(GroupedCategoriesColor):Object.keys(ColorStyles);\n  let { min, max, categories, stream } = d.stream;\n  categories = categories.sort((a, b) => allCategories.indexOf(a) - allCategories.indexOf(b));\n  stream = stream.sort((a, b) => {\n    const ai = categories.indexOf(a[2]), bi = categories.indexOf(b[2]);\n    if (ai !== bi) return ai - bi;\n    return a[0] - b[0];\n  })\n\n  // console.log(stream);\n  const calCat = new Set();\n  stream.forEach(d => calCat.add(d[2]));\n\n  let selected = {}\n  const mappedGroupedCategories = d.filterCategories.map(cat => GroupedCategories[cat])\n  for (const cat of categories) {\n    if (d.showOnlySelected) {\n      if (d.groupedCat) {\n        if (mappedGroupedCategories.includes(cat))\n          selected[cat] = true\n        else selected[cat] = false\n      }\n      else {\n        if (d.filterCategories.includes(cat))\n          selected[cat] = true\n        else selected[cat] = false\n      }\n    }\n    else selected[cat] = true\n  }\n\n  const getOption = () => {\n    return {\n      animationDuration: 100,\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'line',\n          lineStyle: {\n            color: 'rgba(0,0,0,0.2)',\n            width: 1,\n            type: 'solid'\n          }\n        }\n      },\n      legend: {\n        formatter: name => d.groupedCat?name:TextTranslate[name],\n        data: categories,\n        x: 'center',\n        y: 'bottom',\n        selected: selected,\n        // padding: [0,50,0,0]\n      },\n      color: categories.map(cat => d.groupedCat?GroupedCategoriesColor[cat]:ColorStyles[cat]),\n      singleAxis: {\n        left: '3%',\n        right: '4%',\n        top: '3%',\n        bottom: d.groupedCat?'15%':'33%',\n        type: 'value',\n        min,\n        max,\n        axisPointer: {\n          label: {\n            show: true\n          }\n        },\n      },\n      series: [\n        {\n          type: 'themeRiver',\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 20,\n              shadowColor: 'rgba(0, 0, 0, 0.2)'\n            }\n          },\n          data: stream,\n          label: {\n            show: false,\n          }\n        }\n      ]\n    };\n  }\n\n  return <div className={classes.root}>\n    <ReactEcharts style={{\n      width: '100%',\n      height: '100%',\n    }} option={getOption()} />\n  </div>\n}\n\nexport default inject('d')(observer(Stream));\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { inject, observer } from \"mobx-react\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport BarCharts from './BarCharts';\nimport Stream from './Stream';\n\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    left: `calc(20vw + ${theme.spacing(1)}px)`,\n    width: `calc(40vw - ${theme.spacing(1.5)}px)`,\n    bottom: theme.spacing(1),\n    height: `calc(50vh - ${theme.spacing(1.5)}px)`,\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1)\n  },\n  switches: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    height: '10%',\n  },\n  switchbox:{\n    width: '30%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  view: {\n    position: 'relative',\n    height: '90%',\n  }\n}));\n\nfunction Distribution({ d }) {\n  const classes = useStyles();\n  const [stream, setVisType] = React.useState(true);\n\n  const handleVisChange = (event) => {\n    setVisType(event.target.checked);\n  };\n\n  const handleGroupedChange = (event) => {\n    d.groupedCat = !d.groupedCat;\n  };\n\n  const handleSelectedChange = (event) => {\n    d.showOnlySelected = !d.showOnlySelected;\n  };\n\n\n\n  return <div className={classes.root}>\n    <FormGroup className={classes.switches}>\n      <div className={classes.switchbox}>\n        <Typography>Bar</Typography>\n          <Switch checked={stream} onChange={handleVisChange}/>\n        \n        <Typography item>Stream</Typography>\n      </div>\n      <div className={classes.switchbox}>\n        <Typography>All Vis.</Typography>\n        <Switch checked={d.showOnlySelected} onChange={handleSelectedChange}/>\n        <Typography item>Filtered Vis.</Typography>\n      </div>\n      <div className={classes.switchbox}>\n        <Typography>Non-grouped</Typography>\n        <Switch checked={d.groupedCat} onChange={handleGroupedChange}/>\n        <Typography item>Grouped</Typography>\n      </div>\n      {/* <FormControlLabel control={<Switch checked={stream} onChange={handleVisChange} />} label=\"Stream\" /> */}\n      {/* <FormControlLabel control={<Switch checked={d.groupedCat} onChange={handleGroupedChange} />} label=\"Grouped\" /> */}\n    </FormGroup >\n    <div className={classes.view}>\n      {stream ? <Stream /> : <BarCharts />}\n    </div>\n  </div>\n}\n\nexport default inject('d')(observer(Distribution));","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {inject, observer} from \"mobx-react\";\nimport ReactWordcloud from 'react-wordcloud';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        width: `calc(40vw - ${theme.spacing(1.5)}px)`,\n        bottom: theme.spacing(1),\n        height: `calc(50vh - ${theme.spacing(1.5)}px)`,\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    placeholder:{\n        display: 'flex',\n        height: '10px'\n    }\n}));\n\n\nconst options = {\n    colors: ['#1f5886'],\n    enableTooltip: true,\n    deterministic: false,\n    fontFamily: 'impact',\n    fontSizes: [15, 60],\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    padding: 1,\n    rotations: 3,\n    rotationAngles: [0, 0],\n    scale: 'sqrt',\n    spiral: 'archimedean',\n    transitionDuration: 100,\n}\n\nfunction WordCloud({d}) {\n    const classes = useStyles();\n    const words = d.showedWords;\n\n    \n    const callbacks = {\n        \n        getWordColor: word => {\n            if (d.clickOnWord)\n                if (d.clickedWord == word.text)\n                    return '#e94b4a'\n            return '#1f5886'\n        },\n        onWordClick: word => {\n            // console.log(word);\n            if (!d.clickOnWord){\n                d.clickOnWord = true;\n                d.clickedWord = word.text;\n            }\n            else if (d.clickOnWord && d.clickedWord != word.text){\n                d.clickedWord = word.text;\n            }\n            else {\n                d.clickOnWord = false;\n                d.clickedWord = \"\";\n            }\n        },\n    }\n\n\n    return <div className={classes.root}>\n        {d.clickOnWord? <div className={classes.placeholder} onClick={() => d.initClickWord()}><Typography>{`Selected Word: ${d.clickedWord}`}</Typography><CloseIcon/></div>:<div className={classes.placeholder}></div>}\n        <ReactWordcloud callbacks={callbacks} options={options} words={words}/>\n    </div>\n}\n\nexport default inject('d')(observer(WordCloud));\n","import React from 'react';\nimport {makeStyles, ListItem, Collapse, List, ListItemText, ListItemIcon, Checkbox, IconButton} from \"@material-ui/core\";\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\nimport {inject, observer} from \"mobx-react\";\nimport {ColorStyles, TextTranslate} from \"../../store/Categories\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nfunction VisType({visType, boxes, setVisible}) {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const checked = boxes.reduce((previousValue, currentValue) => previousValue && currentValue.visibility === \"visible\", true);\n    const indeterminate = !checked && boxes.reduce((previousValue, currentValue) => previousValue || currentValue.visibility === \"visible\", false);\n\n    const handleChangeAll = () => {\n        if (checked) setVisible(boxes.map(box => box.index));\n        else setVisible(boxes.filter(box => box.visibility !== 'visible').map(box => box.index))\n    };\n    const handleChange = idx => {\n        setVisible([idx]);\n    };\n\n    return <React.Fragment>\n        <ListItem>\n            <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={checked}\n                  indeterminate={indeterminate}\n                  tabIndex={-1}\n                  style={{color: ColorStyles[visType]}}\n                  onClick={handleChangeAll}\n                  disableRipple\n                />\n            </ListItemIcon>\n            <ListItemText primary={`${TextTranslate[visType]}(${boxes.length})`}/>\n            <IconButton>\n                {open ?\n                  <ExpandLess onClick={() => setOpen(false)}/> :\n                  <ExpandMore onClick={() => setOpen(true)}/>}\n            </IconButton>\n        </ListItem>\n        <Collapse in={open} timeout={'auto'} unmountOnExit>\n            <List component={'div'} disablePadding>\n                {boxes.map((box, bid) => {\n                    return <ListItem className={classes.nested}>\n                        <ListItemIcon>\n                            <Checkbox\n                              edge=\"start\"\n                              checked={box.visibility === \"visible\"}\n                              onClick={() => handleChange(box.index)}\n                              tabIndex={-1}\n                              style={{color: ColorStyles[visType]}}\n                              disableRipple\n                            />\n                        </ListItemIcon>\n                        <ListItemText primary={bid + 1}/>\n                    </ListItem>\n                })}\n            </List>\n        </Collapse>\n    </React.Fragment>\n}\n\nexport default inject()(observer(VisType));\n","import React, {useState} from 'react';\nimport {\n    makeStyles,\n    Dialog,\n    DialogContent,\n    Typography,\n    List,\n    CircularProgress,\n    Button, fade\n} from \"@material-ui/core\";\nimport {ColorStyles, TextTranslate} from \"../../store/Categories\";\nimport {inject, observer} from \"mobx-react\";\nimport VisType from \"./VisType\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    titlebar: {\n        display: \"flex\",\n        maxWidth: '50vw',\n        justifyContent: 'space-between',\n    },\n    row: {\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: 'center',\n        alignItems: \"center\",\n        width: \"50vw\",\n    },\n    imgView: {\n        position: \"relative\",\n        flex: 1,\n        margin: theme.spacing(2, 0),\n    },\n    img: {\n        position: \"relative\",\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    recs: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        overflow: 'hidden',\n    },\n    rec: {\n        position: \"absolute\",\n    },\n    label: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: theme.spacing(0.5),\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        color: '#ffffff'\n    },\n    details: {\n        position: \"relative\",\n        width: \"15vw\",\n        overflow: \"scroll\"\n    },\n    caption: {\n        maxWidth: '50vw',\n    }\n}));\n\nfunction DetailView({d, sys}) {\n    const classes = useStyles();\n    const boxes = d.boxes;\n    const {title, url} = d.getPaperInfo(sys.detailedImg[0]);\n    const {caption} = d.getImageInfo(sys.detailedImg[0], sys.detailedImg[1]);\n\n    const [state, setState] = useState({\n        dimensions: {\n            height: 1,\n            width: 1,\n        },\n        imgSize: [0, 0],\n    })\n\n    const onImgLoad = ({target: img}) => {\n        const maxWidth = window.innerWidth * 0.35,\n          maxHeight = window.innerHeight * 0.5;\n        const scale = Math.min(maxHeight / img.naturalHeight, maxWidth / img.naturalWidth);\n        setState({\n            dimensions: {\n                height: img.naturalHeight,\n                width: img.naturalWidth,\n            },\n            imgSize: [scale * img.naturalWidth, scale * img.naturalHeight],\n        });\n    }\n\n    const handleChange = indexes => {\n        indexes.forEach(index => {\n            const {visibility} = boxes[index];\n            boxes[index].visibility = visibility === \"visible\" ? \"hidden\" : \"visible\";\n        });\n    };\n\n    const categories = {};\n    if (boxes !== null)\n        boxes.forEach((box, index) => {\n            if (!categories.hasOwnProperty(box.visType)) categories[box.visType] = [];\n            categories[box.visType].push({index, ...box});\n        });\n\n    return <Dialog open={sys.detailView} onClose={sys.closeDetail} maxWidth={false}>\n        <DialogContent>\n            {boxes === null ?\n              <CircularProgress/> :\n              <div className={classes.root}>\n                  <div className={classes.titlebar}>\n                      <Typography variant={'h5'}>\n                          {title}\n                      </Typography>\n                      <Button href={url} variant={\"contained\"}>Paper</Button>\n                  </div>\n                  <div className={classes.row}>\n                      <div className={classes.imgView}\n                           style={{width: state.imgSize[0], height: state.imgSize[1]}}>\n                          <img className={classes.img}\n                               src={sys.detailedImg[2]} alt={sys.detailedImg[2]}\n                               onLoad={onImgLoad}\n                               style={{width: state.imgSize[0], height: state.imgSize[1]}}/>\n                          <div className={classes.recs}\n                               style={{width: state.imgSize[0], height: state.imgSize[1]}}>\n                              {boxes.map((value, index) => {\n                                  return <div key={index}\n                                              className={classes.rec}\n                                              style={\n                                                  {\n                                                      left: `${100 * value.box[0] / state.dimensions.width}%`,\n                                                      top: `${100 * value.box[1] / state.dimensions.height}%`,\n                                                      width: `${100 * (value.box[2] - value.box[0]) / state.dimensions.width}%`,\n                                                      height: `${100 * (value.box[3] - value.box[1]) / state.dimensions.height}%`,\n                                                      backgroundColor: fade(ColorStyles[value.visType], 0.3),\n                                                      visibility: value.visibility,\n                                                  }}>\n                                      <div className={classes.label}>{TextTranslate[value.visType]}</div>\n                                  </div>\n                              })}\n                          </div>\n                      </div>\n                      <div className={classes.details} style={{height: state.imgSize[1]}}>\n                          <List disablePadding>\n                              {Object.keys(categories)\n                                .sort((a, b) => categories[b].length - categories[a].length)\n                                .map(visType => {\n                                    return <VisType key={visType}\n                                                    visType={visType} boxes={categories[visType]}\n                                                    setVisible={handleChange}/>\n                                })}\n                          </List>\n                      </div>\n                  </div>\n\n                  <Typography className={classes.caption}>{caption}</Typography>\n              </div>}\n        </DialogContent>\n    </Dialog>\n}\n\nexport default inject('d', 'sys')(observer(DetailView));\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'absolute',\n        left: 0,\n        width: `20vw`,\n        top: `calc(9vh + ${theme.spacing(1)}px)`,\n        bottom: theme.spacing(1),\n        borderRadius: `0 ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0`,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    title:{\n        padding: '15px',\n        fontWeight: 'bold'\n    },\n    authors:{\n        padding: '0px 15px 0px 15px',\n        fontWeight: 'bold'\n    },\n    abstract:{\n        padding: '15px'\n    }\n}));\n\n\nexport default function LeftBar() {\n    const classes = useStyles();\n\n    return <div className={classes.root}>\n        <Typography variant='h6' className={classes.title}>\n            A Corpus of Visualizations in the Images of Visualization Publications\n        </Typography>\n\n        <Typography  variant='h7' className={classes.authors}>\n        Dazhen Deng, Yihong Wu, Xinhuan Shu, Jiang Wu, Mengye Xu, Siwei Fu, Weiwei Cui, Yingcai Wu\n        </Typography>\n        \n        <Typography  variant='h7' className={classes.abstract}>\n        Images in visualization publications contain rich information, e.g., novel visualization designs and common combinations of visualizations. A systematic collection of these images can contribute to the community in many aspects, such as literature analysis and automated tasks for visualization. In this paper, we build and make public a dataset, VisImages, which collects 12,267 images with captions from 1,397 papers in IEEE InfoVis and VAST. Based on a comprehensive visualization taxonomy, the dataset includes 35,096 annotated visualizations, as well as their bounding boxes in the images. We demonstrate the usefulness of VisImages through three use cases: 1) investigating the use of visualizations in the publications with VisImages Explorer, 2) training and benchmarking models for visualization classification, and 3) localizing visualizations in the visual analytics systems automatically.\n        </Typography>\n    </div>\n}","import React from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nimport { inject, observer } from \"mobx-react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport dataStructure from './data-structure.png';\nimport pipeline from './pipeline.png';\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        position: 'absolute',\n        padding: theme.spacing(1),\n        left: `calc(20vw + ${theme.spacing(1)}px)`,\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        height: `calc(100vh - ${theme.spacing(2)}px)`,\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.background.paper,\n        overflow: 'scroll'\n    },\n    title: {\n        padding: '10px 30px 10px 30px',\n        fontWeight: 'bold'\n    },\n    figure: {\n        padding: '10px 60px 10px 60px',\n        maxWidth: '1080px',\n    },\n    figureHalf: {\n        display: 'block',\n        padding: '10px 60px 10px 60px',\n        maxWidth: '600px',\n    },\n    details: {\n        display: 'block',\n        padding: '10px 60px 40px 60px',\n        width: '80%',\n    },\n    lists: {\n        display: 'block',\n        padding: '0px 60px 10px 60px',\n        width: '80%',\n    },\n    table: {\n        padding: '0px 60px 10px 60px',\n    },\n    th: {\n        borderRight: \"1px solid black\",\n    },\n    td: {\n        borderRight: \"1px solid black\",\n    },\n    th2: {\n        borderTop: \"1px solid black\",\n    },\n    th3: {\n        borderBottom: \"2px solid black\",\n    }\n}));\n\n\nfunction RightPanel({ d }) {\n    const classes = useStyles();\n\n    const tableData = {\n        \"Area\": \"area chart, proportional area chart\",\n        \"Bar\": \"bar chart\",\n        \"Circle \": \"donut chart, pie chart\",\n        \"Diagram\": \"flow diagram, chord diagram, Sankey diagram, Venn diagram\",\n        \"Statistic\": \"box plot, error bar, stripe graph\",\n        \"Table\": \"table\",\n        \"Line\": \"contour graph, line chart, storyline, polar plot, parallel coordinate (PCP), surface graph, vector graph\",\n        \"Map\": \"map\",\n        \"Point\": \"scatter plot\",\n        \"Grid & Matrix\": \"heatmap, matrix\",\n        \"Word\": \"phrase net, word cloud, word tree\",\n        \"Tree & Graph \": \"graph, tree, treemap, hierarchical edge bundling, sunburst/icicle chart\",\n        \"Special\": \"glyph-based visualization, unit visualization\"\n    }\n\n    const changeState = () => {\n        d.router = \"explorer\";\n    }\n\n    return <div className={classes.root}>\n        <Typography variant=\"h6\" className={classes.title}>\n            Data Structure\n        </Typography>\n        <img src={dataStructure} className={classes.figureHalf} />\n        <Typography variant=\"h7\" className={classes.details}>\n            The data in VisImages is organized into three levels, namely, paper, image, and visualization. The paper data includes metadata of the paper (i.e., title, authors, conference, year) and image data. The metadata of the paper is coded from vispubdata.org. The image data is a list of the data of each image, which includes the image file name, textual caption, image position (bounding box) in the paper, and visualitzation data.\n            The visualization data is a list of the data of each visualization, including the visualization type and visualization position (bounding box) in the image.\n            In all, the dataset contain the data of 1,397 papers, 12,267 images, and 35,096 visualizations. You can explore the data using <a style={{ display: 'inline', color: 'blue' }} onClick={changeState}>VisImages Explorer</a>.\n        </Typography>\n\n\n        <Typography variant=\"h6\" className={classes.title}>\n            Data & Codes\n        </Typography>\n        <ul className={classes.lists}>\n            <li>\n                <a href=\"https://drive.google.com/drive/folders/1p00qs7PXCpbxhcaeDeYV4bENh8Jmn53r?usp=sharing\">Download the Dataset.</a>\n            </li>\n            <li>\n                <a href=\"https://github.com/VisImages/data\">Source Code for Images Extraction.</a>\n            </li>\n            <li>\n                <a href=\"https://github.com/VisImages/caption_tool\">Source Code of Caption Validation and Correction Tool.</a>\n            </li>\n            <li>\n                <a href=\"https://github.com/VisImages/visimages_annotation\">Source Code of Image Annotation Interface.</a>\n            </li>\n        </ul>\n\n        <Typography variant=\"h6\" className={classes.title}>\n            Data Annotation Process\n        </Typography>\n        <img src={pipeline} className={classes.figure} />\n        <Typography variant=\"h7\" className={classes.details}>\n            To ensure the quality and efficiency of the annotation, we adopt a framework with carefully designed tasks and cross-validation procedures. Specifically, we recruit senior visualization practitioners to annotate visualization types and employ crowd workers for bounding box annotation.\n        </Typography>\n\n        <Typography variant=\"h6\" className={classes.title}>\n            Visualization Taxonomy\n        </Typography>\n        <table className={classes.table}>\n            <tr>\n                <th className={clsx(classes.th, classes.th3)}>Categories</th>\n                <th className={classes.th3}>Subtypes</th>\n            </tr>\n            {Object.keys(tableData).map((key, index) => {\n                if (index == Object.keys(tableData).length - 1){\n                    return <tr>\n                    <td className={clsx(classes.td, classes.th3)}>{key}</td>\n                    <td className={classes.th3}>{tableData[key]}</td>\n                </tr>\n                }\n                return <tr>\n                    <td className={classes.td}>{key}</td>\n                    <td>{tableData[key]}</td>\n                </tr>\n            })}\n        </table>\n        <Typography variant=\"h7\" className={classes.details}>\n            We use a comprehensive taxonomy proposed by <a href=\"https://ieeexplore.ieee.org/document/6634103/\">Borkin et al.</a> to classify the visualization types contained in the images.\n        </Typography>\n    </div>\n}\n\n\nexport default inject('d')(observer(RightPanel));","import React from 'react';\nimport { makeStyles, CssBaseline } from \"@material-ui/core\";\nimport AppBar from \"./AppBar/AppBar\";\nimport ControlPanel from \"./ControlPanel/ControlPanel\";\nimport Gallery from \"./Gallery/Gallery\";\nimport Distribution from \"./Distribution/Distribution\";\nimport WordCloud from \"./WordCloud/WordCloud\";\nimport DetailView from \"./DetailView/DetailView\";\nimport LeftBar from './Home/LeftBar';\nimport RightPanel from './Home/RightPanel';\nimport { inject, observer } from \"mobx-react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\n\nfunction App({ d }) {\n    const classes = useStyles();\n    console.log(d.router);\n\n    return <div className={classes.root}>\n        <CssBaseline />\n        <AppBar />\n        {d.router == \"home\" ?\n            <React.Fragment>\n                <LeftBar/>\n                <RightPanel/>\n            </React.Fragment> :\n            <React.Fragment>\n                <ControlPanel />\n                <Gallery />\n                <Distribution />\n                <WordCloud />\n                <DetailView />\n\n            </React.Fragment>}\n    </div>;\n}\n\nexport default inject('d')(observer(App))\n","import {action, computed, observable} from \"mobx\";\nimport {createMuiTheme, darken, fade, lighten} from \"@material-ui/core\";\n\nclass SystemStatus {\n    constructor(root) {\n        this.root = root;\n    }\n\n    init() {\n    }\n\n    scrollbar = '#888b8b';\n    @observable.shallow themeOption = {\n        spacing: 10,\n        palette: {\n            primary: {main: '#dadbdc'},\n            secondary: {main: '#1f5886'}\n        },\n        overrides: {\n            MuiCssBaseline: {\n                '@global': {\n                    '*::-webkit-scrollbar': {\n                        width: 10,\n                    },\n                    '*::-webkit-scrollbar-track': {\n                        display: 'none',\n                    },\n                    '*::-webkit-scrollbar-corner': {\n                        display: 'none',\n                    },\n                    '*::-webkit-scrollbar-thumb': {\n                        backgroundColor: fade(this.scrollbar, 0.1),\n                        borderRadius: 10,\n                    },\n                    '*:hover::-webkit-scrollbar-thumb': {\n                        backgroundColor: lighten(this.scrollbar, 0.2),\n                    },\n                    '*::-webkit-scrollbar-thumb:hover': {\n                        backgroundColor: this.scrollbar,\n                    },\n                    '*::-webkit-scrollbar-thumb:active': {\n                        backgroundColor: darken(this.scrollbar, 0.2),\n                    }\n                }\n            }\n        }\n    }\n\n    @computed get theme() {\n        return createMuiTheme(this.themeOption);\n    }\n\n    @observable detailView = false;\n    detailedImg = [-1, -1, ''];\n    @action showDetail = (pid, iid, url) => {\n        this.detailView = true;\n        if (this.detailedImg[0] !== pid || this.detailedImg[1] !== iid) {\n            this.detailedImg = [pid, iid, url];\n            this.root.d.updateBBoxes(null);\n            this.root.d.updateBBoxes(this.root.apiV1.getBBox(pid, iid))\n            // this.root.apiV1.getBBox(pid, iid, res => {\n            //     this.root.d.updateBBoxes(res.bboxes);\n            // })\n        }\n    }\n    @action closeDetail = () => {\n        this.detailView = false;\n    }\n}\n\nexport default SystemStatus;\n","import { action, computed, observable } from \"mobx\";\nimport { GroupedCategories } from \"./Categories\";\n\nclass Data {\n    constructor(root) {\n        this.root = root;\n    }\n\n    init() {\n        this.initPapers();\n        this.initImages();\n    }\n\n    @observable.shallow papers = [];\n    @action updatePapers = papers => {\n        this.papers = papers;\n    }\n    initPapers = (cb = null) => {\n        this.updatePapers(this.root.apiV1.filterPapersByCondition({}));\n        this.extractFilters();\n    }\n    getPaperInfo = pid => {\n        for (const paper of this.papers)\n            if (paper.pid === pid) return paper;\n        return {};\n    }\n\n    @computed get filteredPapers() {\n        return this.papers.filter(p => {\n            if (this.filterConferences.length > 0 && !this.filterConferences.includes(p.conference)) return false;\n            if (this.filterYears.length > 0 && (p.year < this.filterYears[0] || p.year > this.filterYears[1])) return false;\n            if (this.filterAuthors.length > 0) {\n                let flag = false;\n                for (let author of p.authors)\n                    if (this.filterAuthors.includes(author)) {\n                        flag = true;\n                        break;\n                    }\n                if (!flag) return false;\n            }\n            return true;\n        })\n    }\n    \n    @observable router = 'home';\n    @observable.shallow allConferences = [];\n    @observable.shallow allAuthors = [];\n    @observable.shallow allYears = [];\n    @observable.shallow paperConf = {};\n    @observable.shallow yearCount = {};\n    paperYear = {};\n    extractFilters = (certainPapers = null) => {\n        const papers = certainPapers || this.papers;\n\n        const allConferences = new Set();\n        const allAuthors = new Set();\n        const allYears = new Set();\n        papers.forEach(p => {\n            allConferences.add(p.conference);\n            this.paperConf[p.pid] = p.conference;\n            for (const aut of p.authors) allAuthors.add(aut);\n            allYears.add(p.year);\n            this.paperYear[p.pid] = p.year;\n        });\n        this.allConferences = [...allConferences];\n        this.allAuthors = [...allAuthors].sort();\n        this.allYears = [...allYears].sort();\n    }\n\n    @observable.shallow filterConferences = [];\n    @observable.shallow filterAuthors = [];\n    @observable.shallow filterYears = [];\n    @observable.shallow filterCaption = [];\n    @action updateFilter = (key, value) => {\n        this.initClickWord();\n        // console.log(key, value, this.filterAuthors, this.filterConferences, this.filteredPapers);\n        if (key === 'search') {\n            const res = this.root.apiV1.filterPapersByCondition({\n                search: value,\n            })\n            this.updatePapers(res);\n            this.initImages();\n            // this.extractFilters();\n        }\n\n        // this.root.apiV1.getPapers({\n        //     search: value.split(' '),\n        // }, res => {\n        // })\n        else if (key == 'Years') {\n            this[`filter${key}`] = value;\n            this.updateWords();\n        }\n        else {\n            if (key == \"Caption\")\n                this[`filter${key}`] = this.root.apiV1.tokenizeAndStem(value);\n            else\n                this[`filter${key}`] = value;\n            this.updateImageCounts();\n            if (!this.clickOnWord)\n                this.updateWords();\n        }\n    }\n\n    @observable.shallow images = [];\n    initImages = () => {\n        const papers = this.papers;\n        const pids = papers.map(p => p.pid);\n        this.images = this.root.apiV1.getImages(pids);\n        this.updateImageCounts();\n        this.updateWords();\n    }\n\n    @action updateImageCounts = () => {\n        const yearCount = {};\n        this.filteredPapers.forEach(p => {\n            if (!yearCount[p.year])\n                yearCount[p.year] = {\n                    InfoVis: 0,\n                    VAST: 0,\n                }\n            yearCount[p.year][this.paperConf[p.pid]] += 1;\n        });\n\n        // this.showedImages.forEach(img => {\n        //     const year = this.paperYear[img.pid];\n        //     yearCount[year][img.conference] += 1;\n        // })\n        this.yearCount = JSON.parse(JSON.stringify(yearCount));\n    };\n    getImageInfo = (pid, iid) => {\n        for (const image of this.images)\n            if (image.pid === pid && image.iid === iid) return image;\n        return {};\n    }\n\n    @observable.shallow allCategories = [\n        'line_chart',\n        'scatterplot',\n        'tree',\n        'heatmap',\n        'treemap',\n        'graph',\n        'map',\n        'bar_chart',\n        'small_multiple',\n        'matrix',\n        'flow_diagram',\n        'table',\n        'sunburst_icicle',\n        'parallel_coordinate',\n        'box_plot',\n        'error_bar',\n        'glyph_based',\n        'area_chart',\n        'pie_chart',\n        'sector_chart',\n        'word_cloud',\n        'proportional_area_chart',\n        'unit_visualization',\n        'donut_chart',\n        'sankey_diagram',\n        'hierarchical_edge_bundling',\n        'chord_diagram',\n        'stripe_graph',\n        'polar_plot',\n        'storyline',\n        'NoVis'\n    ];\n    @observable.shallow filterCategories = [];\n    // [\n    //     'line_chart',\n    //     'scatterplot',\n    //     'tree',\n    //     'heatmap',\n    //     'treemap',\n    //     'graph',\n    //     'map',\n    //     'bar_chart',\n    //     'small_multiple',\n    //     'matrix',\n    //     'flow_diagram',\n    //     'table',\n    //     'sunburst_icicle',\n    //     'parallel_coordinate',\n    //     'box_plot',\n    //     'error_bar',\n    //     'glyph_based',\n    //     'area_chart',\n    //     'pie_chart',\n    //     'sector_chart',\n    //     'word_cloud',\n    //     'proportional_area_chart',\n    //     'unit_visualization',\n    //     'donut_chart',\n    //     'sankey_diagram',\n    //     'hierarchical_edge_bundling',\n    //     'chord_diagram',\n    //     'stripe_graph',\n    //     'polar_plot',\n    //     'storyline',\n    //     'NoVis'\n    // ];\n    @action updateFilterCategories = filters => {\n        this.filterCategories = filters;\n        this.updateWords();\n    }\n\n\n    @observable barSelected = false;\n    @computed get bars() {\n        if (this.allYears.length === 0) return [];\n        const minYear = this.allYears[0];\n        const maxYear = this.allYears[this.allYears.length - 1];\n        return [...new Array(maxYear - minYear + 1)].map((_, i) => {\n            const year = minYear + i;\n            if (!this.yearCount[year]) return {\n                year,\n                VAST: 0,\n                InfoVis: 0,\n            }\n            return {\n                year,\n                InfoVis: this.yearCount[year].InfoVis,\n                VAST: this.yearCount[year].VAST,\n            }\n        })\n    }\n\n    // updateBars = () => {\n    //     if (this.allYears.length === 0) return [];\n    //     const minYear = this.allYears[0];\n    //     const maxYear = this.allYears[this.allYears.length - 1];\n    //     return [...new Array(maxYear - minYear + 1)].map((_, i) => {\n    //         const year = minYear + i;\n    //         if (!this.yearCount[year]) return {\n    //             year,\n    //             papers: 0,\n    //             images: 0,\n    //         }\n    //         return {\n    //             year,\n    //             papers: this.yearCount[year].papers,\n    //             images: this.yearCount[year].images,\n    //         }\n    //     })\n    // }\n\n    @computed get showedImages() {\n        const pids = this.filteredPapers.map(p => p.pid);\n        // console.log(this.filterCaption, this.filterCaption.length);\n        return this.images\n            .filter(img => {\n                if (!pids.includes(img.pid)) return false;\n                if (this.clickOnWord)\n                    if (img.captionStat[this.clickedWord] == undefined)\n                        return false\n                if (this.filterCaption.length > 0) {\n                    let isFiltered = false;\n                    for (const keyword of this.filterCaption) {\n                        // console.log(keyword, img.captionStat[keyword])\n                        if (img.captionStat[keyword] != undefined) {\n                            isFiltered = true;\n                            break;\n                        }\n                    }\n                    if (!isFiltered) return false\n                }\n                let isFiltered = true;\n                for (const cat of this.filterCategories)\n                    if (!img.categories.includes(cat)) {\n                        return false;\n                    }\n                return isFiltered\n            });\n    }\n\n    @observable groupedCat = true;\n    @observable showOnlySelected = false;\n    @observable clickOnWord = false;\n    @observable clickedWord = \"\";\n\n    initClickWord = () => {\n        this.clickOnWord = false;\n        this.clickedWord = \"\";\n    }\n\n    @computed get stream() {\n        let min = 9999, max = 0;\n        const categories = new Set();\n        const stream = {};\n\n        this.showedImages.forEach(img => {\n            const year = this.paperYear[img.pid];\n            min = Math.min(min, year);\n            max = Math.max(max, year);\n\n            // console.log(img);\n\n            img.categories.forEach(cat => {\n                let key = null;\n                if (this.groupedCat){\n                    categories.add(GroupedCategories[cat]);\n                    key = `${year},${GroupedCategories[cat]}`;\n                }\n                else{\n                    categories.add(cat);\n                    key = `${year},${cat}`;\n                }\n                if (!stream.hasOwnProperty(key)) stream[key] = img.nums_of_visualizations[cat]===undefined?1:img.nums_of_visualizations[cat];\n                else {stream[key] += img.nums_of_visualizations[cat]===undefined?1:img.nums_of_visualizations[cat];}\n            });\n        });\n\n        for (let i = min; i <= max; i++)\n            for (const cat of [...categories])\n                if (!Object.keys(stream).includes(`${i},${cat}`))\n                    stream[`${i},${cat}`] = 0;\n\n        return {\n            min,\n            max,\n            categories: [...categories],\n            stream: Object.keys(stream).map(key => {\n                const [year, type] = key.split(',');\n                const count = stream[key];\n                return [year, count, type];\n            })\n        };\n    }\n\n    @computed get barSeries() {\n        let min = 9999, max = 0;\n        const categories = new Set();\n        const bars = {};\n        const barSeries = [];\n\n        this.showedImages.forEach(img => {\n            const year = this.paperYear[img.pid];\n            min = Math.min(min, year);\n            max = Math.max(max, year);\n\n            img.categories.forEach(cat => {\n                let key = null;\n                if (this.groupedCat){\n                    categories.add(GroupedCategories[cat]);\n                    key = `${year},${GroupedCategories[cat]}`;\n                }\n                else{\n                    categories.add(cat);\n                    key = `${year},${cat}`;\n                }\n                if (!bars.hasOwnProperty(key)) bars[key] = img.nums_of_visualizations[cat]===undefined?1:img.nums_of_visualizations[cat];\n                else bars[key] += img.nums_of_visualizations[cat]===undefined?1:img.nums_of_visualizations[cat];\n            });\n        });\n\n        for (const cat of [...categories]) {\n            // console.log(this.groupedCat, cat);\n            const yearSeries = []\n            for (let i = min; i <= max; i++) {\n                if (!Object.keys(bars).includes(`${i},${cat}`))\n                    yearSeries.push(0);\n                else yearSeries.push(bars[`${i},${cat}`]);\n            }\n            barSeries.push({\n                name: cat,\n                type: 'bar',\n                stack: 'total',\n                emphasis: {\n                    focus: 'series'\n                },\n                data: yearSeries,\n            })\n        }\n\n        return {\n            min,\n            max,\n            categories: [...categories],\n            bars: barSeries\n        };\n    }\n\n    @observable.shallow showedWords = [];\n\n    @action updateWords() {\n        const wordFrequencies = {};\n        this.showedImages.forEach(img => {\n            Object.keys(img.captionStat).forEach(word => {\n                if (wordFrequencies.hasOwnProperty(word)) wordFrequencies[word] += img.captionStat[word];\n                else wordFrequencies[word] = img.captionStat[word];\n            });\n        });\n        this.showedWords = Object.keys(wordFrequencies).map(word => ({\n            text: word,\n            value: wordFrequencies[word],\n        }));\n    }\n\n    @observable boxes = null;\n    @action updateBBoxes = boxes => this.boxes = boxes;\n}\n\nexport default Data;\n","import paperInfo from \"../metadata/visimage_paper_info.json\"\nimport imageInfo from \"../metadata/visimages_data_with_word_count.json\"\n\n\nvar natural = require('natural');\nvar tokenizer = new natural.WordTokenizer();\n\nconst url = uri => \"https://github.com/VisImages/visimages-image-data/blob/main\"+`${uri}?raw=true`;  //remote version\n\n//  const url = uri => process.env.PUBLIC_URL+\"/image-data\"+`${uri}`;  //local version in which the images are stored in the public folder\n\nclass APIv1 {\n\n    getImages = (pids = []) => {\n        const images = [];\n        pids.forEach(pid => {\n            if (imageInfo[pid] != undefined){\n                imageInfo[pid].forEach(img => {\n                    // console.log(img.iid)\n                    // console.log(img);\n                    let conference = undefined\n                    for (const paper of paperInfo){\n                        if (paper.pid == pid){\n                            conference = paper.conference;\n                        }\n                    }\n                    images.push({\n                        conference: conference,\n                        pid: pid,\n                        url: url(`/${pid}/${img.iid}.png`),\n                        ...img\n                    })\n                })\n            }\n        })\n        let shuffled = images\n        .map((value) => ({ value, sort: Math.random() }))\n        .sort((a, b) => a.sort - b.sort)\n        .map(({ value }) => value)\n        return shuffled\n    }\n\n    getBBox = (pid, iid) => {\n        // const req = new Request(url(`/bbox/${pid}/${iid}`));\n        // this.fetch(req, cb);\n        const visualizations = []\n        imageInfo[pid].forEach(img => {\n            if (img.iid === iid){\n                Object.keys(img.visualization_bbox).forEach(visType => {\n                    img.visualization_bbox[visType].forEach((box, idx) => {\n                        visualizations.push({\n                            visType: visType,\n                            box: box,\n                            idx: idx + 1,\n                            visibility: \"visible\"\n                        })\n                    })\n                })\n            }\n        })\n\n        return visualizations\n    }\n\n    fetch = (req, cb) => {\n        fetch(req)\n          .then(res => res.json())\n          .then(res => {\n              if (cb instanceof Function) cb(res);\n          })\n          .catch(e => console.error(e));\n    }\n\n    filterPapersByCondition = (params) => {\n        if (Object.keys(params).length === 0 || tokenizer.tokenize(params.search).length == 0){\n            const pids = [];\n            paperInfo.forEach(paperObj => {\n                pids.push(paperObj);\n            })\n            return pids\n        }\n\n        const pids = [];\n        [\"search\", \"conference\", \"year\", \"authors\"].forEach(key => {\n            if (params[key] != undefined && key === \"search\"){\n                const keywords = [];\n                tokenizer.tokenize(params.search).forEach(word => {\n                    keywords.push(natural.PorterStemmer.stem(word))\n                })\n                paperInfo.forEach(paperObj => {\n                    const wordsStemmed = this.tokenizeAndStem(paperObj.title)\n\n                    for (let i = 0; i < keywords.length; i++){\n                        if (wordsStemmed.indexOf(keywords[i]) != -1){\n                            pids.push(paperObj);\n                            break\n                        }\n                    }\n                })\n            }\n        })\n        return pids;\n    }\n\n    getPaperConference = (pid) => {\n        return paperInfo[pid].conference;\n    }\n\n    tokenizeAndStem = (text) => {\n        const wordsStemmed = []\n        let textProcessed = text.toLowerCase().split(\" \");\n        textProcessed.forEach(word => {\n            if (word != \"\")\n                wordsStemmed.push(natural.PorterStemmer.stem(word))\n        })\n        return wordsStemmed;\n    }\n}\n\nexport default APIv1;\n","import SystemStatus from \"./SystemStatus\";\nimport Data from \"./Data\";\nimport APIv1 from './APIv1';\n\nclass Store {\n    // visImages = new VisImages(this);\n    sys = new SystemStatus(this);\n    d = new Data(this);\n    apiV1 = new APIv1();\n\n    constructor() {\n        this.sys.init();\n        this.d.init();\n    }\n}\n\nconst store = new Store();\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport store from './store';\nimport {Provider} from 'mobx-react'\nimport {MuiThemeProvider} from \"@material-ui/core\";\n\n\nReactDOM.render(<Provider visImages={store.visImages} sys={store.sys} d={store.d}>\n    <MuiThemeProvider theme={store.sys.theme}>\n        <App/>\n    </MuiThemeProvider>\n</Provider>, document.querySelector('#root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.62a8d7ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/data-structure.8473f8b2.png\";","module.exports = __webpack_public_path__ + \"static/media/pipeline.ec6f7ab7.png\";"],"sourceRoot":""}